{
  "version": 3,
  "sources": ["../../@multiversx/sdk-dapp/__chunks__/chunk-EQ2NFAP2.js"],
  "sourcesContent": ["import{a as M}from\"./chunk-SSNWR7WF.js\";import{c as S,d as p}from\"./chunk-4NFNYA6L.js\";import{a as v}from\"./chunk-XHZGVAHC.js\";import{a as P}from\"./chunk-EA6JYINF.js\";import{s as B}from\"./chunk-2CBBH2VA.js\";import{h as w}from\"./chunk-C6ERQ4DO.js\";import{i as N}from\"./chunk-S55DZJQR.js\";import{a as z}from\"./chunk-OC3TXL2V.js\";import{e as g}from\"./chunk-P3KWCR7B.js\";import{a as r,b as L,j as C,k as l,m as y}from\"./chunk-HBP5N4FR.js\";y();import{useRef as $}from\"react\";import{Address as D,Message as G}from\"@multiversx/sdk-core\";B();z();var I=(t,i)=>{var n;return i?i===!0?t:(n=i.apiAddress)!=null?n:t:null},Y=t=>{let i=p(N),n=p(w),h=$(n==null?void 0:n.loginToken),a=I(i.apiAddress,t),s=P(r(r({},t===!0?{}:t),a?{apiAddress:a}:{})),b=Boolean(t),T=v(s),{address:f}=M(),m=S(),O=e=>{h.current=e,m(g(r(L(r({},n),{loginToken:e}),a?{nativeAuthConfig:s}:{})))},R=()=>{try{return T.initialize()}catch(e){console.error(\"Unable to get block. Login failed.\",e);return}},k=({address:e,signature:o})=>{let u=h.current;if(!u)throw\"Token not found. Call `setLoginToken` first.\";if(!b){m(g({loginToken:u,signature:o}));return}let A=T.getToken({address:e,token:u,signature:o});return m(g(r({loginToken:u,signature:o,nativeAuthToken:A},a?{nativeAuthConfig:s}:{}))),A};return{configuration:s,setLoginToken:O,getNativeAuthLoginToken:R,setTokenLoginInfo:k,refreshNativeAuthTokenLogin:u=>C(void 0,[u],function*({signMessageCallback:e,nativeAuthClientConfig:o}){let d=yield v(o||s).initialize({noCache:Boolean(o)});if(h.current=d,!d)return;let x=new G({address:new D(f),data:l.Buffer.from(`${f}${d}`)}),c=yield e(x,{});if(!(c!=null&&c.signature))throw\"Message not signed\";return k({address:f,signature:l.Buffer.from(c.signature).toString(\"hex\")})})}};export{Y as a};\n//# sourceMappingURL=chunk-EQ2NFAP2.js.map\n"],
  "mappingsub,mBAAuB;AAAQ,sBAAqC;AAAxE,EAAE;AAA6F,EAAE;AAAE,EAAE;AAAE,IAAI,IAAE,CAAC,GAAE,MAAI;AAAC,MAAI;AAAE,SAAO,IAAE,MAAI,OAAG,KAAG,IAAE,EAAE,eAAa,OAAK,IAAE,IAAE;AAAI;AAArE,IAAuE,IAAE,OAAG;AAAC,MAAI,IAAE,EAAE,CAAC,GAAE,IAAE,EAAE,CAAC,GAAE,QAAE,aAAAA,QAAE,KAAG,OAAK,SAAO,EAAE,UAAU,GAAE,IAAE,EAAE,EAAE,YAAW,CAAC,GAAEC,KAAEC,GAAE,GAAE,GAAE,CAAC,GAAE,MAAI,OAAG,CAAC,IAAE,CAAC,GAAE,IAAE,EAAC,YAAW,EAAC,IAAE,CAAC,CAAC,CAAC,GAAEC,KAAE,QAAQ,CAAC,GAAE,IAAEA,GAAEF,EAAC,GAAE,EAAC,SAAQ,EAAC,IAAE,EAAE,GAAE,IAAE,EAAE,GAAE,IAAE,OAAG;AAAC,MAAE,UAAQ,GAAE,EAAE,EAAE,GAAE,GAAE,GAAE,CAAC,GAAE,CAAC,GAAE,EAAC,YAAW,EAAC,CAAC,GAAE,IAAE,EAAC,kBAAiBA,GAAC,IAAE,CAAC,CAAC,CAAC,CAAC;AAAA,EAAC,GAAE,IAAE,MAAI;AAAC,QAAG;AAAC,aAAO,EAAE,WAAW;AAAA,IAAC,SAAO,GAAE;AAAC,cAAQ,MAAM,sCAAqC,CAAC;AAAE;AAAA,IAAM;AAAA,EAAC,GAAEC,KAAE,CAAC,EAAC,SAAQ,GAAE,WAAU,EAAC,MAAI;AAAC,QAAI,IAAE,EAAE;AAAQ,QAAG,CAAC,EAAE,OAAK;AAA+C,QAAG,CAACC,IAAE;AAAC,QAAE,EAAE,EAAC,YAAW,GAAE,WAAU,EAAC,CAAC,CAAC;AAAE;AAAA,IAAM;AAAC,QAAI,IAAE,EAAE,SAAS,EAAC,SAAQ,GAAE,OAAM,GAAE,WAAU,EAAC,CAAC;AAAE,WAAO,EAAE,EAAE,GAAE,EAAC,YAAW,GAAE,WAAU,GAAE,iBAAgB,EAAC,GAAE,IAAE,EAAC,kBAAiBF,GAAC,IAAE,CAAC,CAAC,CAAC,CAAC,GAAE;AAAA,EAAC;AAAE,SAAM,EAAC,eAAcA,IAAE,eAAc,GAAE,yBAAwB,GAAE,mBAAkBC,IAAE,6BAA4B,OAAG,GAAE,QAAO,CAAC,CAAC,GAAE,WAAU,EAAC,qBAAoB,GAAE,wBAAuB,EAAC,GAAE;AAAC,QAAIE,KAAE,MAAMD,GAAE,KAAGF,EAAC,EAAE,WAAW,EAAC,SAAQ,QAAQ,CAAC,EAAC,CAAC;AAAE,QAAG,EAAE,UAAQG,IAAE,CAACA,GAAE;AAAO,QAAI,IAAE,IAAI,gBAAAC,QAAE,EAAC,SAAQ,IAAI,gBAAAC,QAAE,CAAC,GAAE,MAAK,EAAE,OAAO,KAAK,GAAG,CAAC,GAAGF,EAAC,EAAE,EAAC,CAAC,GAAE,IAAE,MAAM,EAAE,GAAE,CAAC,CAAC;AAAE,QAAG,EAAE,KAAG,QAAM,EAAE,WAAW,OAAK;AAAqB,WAAOF,GAAE,EAAC,SAAQ,GAAE,WAAU,EAAE,OAAO,KAAK,EAAE,SAAS,EAAE,SAAS,KAAK,EAAC,CAAC;AAAA,EAAC,CAAC,EAAC;AAAC;",
  "names": ["$", "s", "k", "b", "d", "G", "D"]
}
