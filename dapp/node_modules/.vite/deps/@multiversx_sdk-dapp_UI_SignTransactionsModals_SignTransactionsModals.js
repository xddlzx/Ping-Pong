"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js
  var require_base64_js = __commonJS({
    "node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js"(exports) {
      "use strict";
      init_dist();
      exports.byteLength = byteLength;
      exports.toByteArray = toByteArray;
      exports.fromByteArray = fromByteArray;
      var lookup = [];
      var revLookup = [];
      var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
      var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      for (i = 0, len = code.length; i < len; ++i) {
        lookup[i] = code[i];
        revLookup[code.charCodeAt(i)] = i;
      }
      var i;
      var len;
      revLookup["-".charCodeAt(0)] = 62;
      revLookup["_".charCodeAt(0)] = 63;
      function getLens(b64) {
        var len2 = b64.length;
        if (len2 % 4 > 0) {
          throw new Error("Invalid string. Length must be a multiple of 4");
        }
        var validLen = b64.indexOf("=");
        if (validLen === -1)
          validLen = len2;
        var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
        return [validLen, placeHoldersLen];
      }
      function byteLength(b64) {
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
      }
      function _byteLength(b64, validLen, placeHoldersLen) {
        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
      }
      function toByteArray(b64) {
        var tmp;
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
        var curByte = 0;
        var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
        var i2;
        for (i2 = 0; i2 < len2; i2 += 4) {
          tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
          arr[curByte++] = tmp >> 16 & 255;
          arr[curByte++] = tmp >> 8 & 255;
          arr[curByte++] = tmp & 255;
        }
        if (placeHoldersLen === 2) {
          tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
          arr[curByte++] = tmp & 255;
        }
        if (placeHoldersLen === 1) {
          tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
          arr[curByte++] = tmp >> 8 & 255;
          arr[curByte++] = tmp & 255;
        }
        return arr;
      }
      function tripletToBase64(num) {
        return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
      }
      function encodeChunk(uint8, start, end) {
        var tmp;
        var output = [];
        for (var i2 = start; i2 < end; i2 += 3) {
          tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);
          output.push(tripletToBase64(tmp));
        }
        return output.join("");
      }
      function fromByteArray(uint8) {
        var tmp;
        var len2 = uint8.length;
        var extraBytes = len2 % 3;
        var parts = [];
        var maxChunkLength = 16383;
        for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
          parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
        }
        if (extraBytes === 1) {
          tmp = uint8[len2 - 1];
          parts.push(
            lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "=="
          );
        } else if (extraBytes === 2) {
          tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
          parts.push(
            lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "="
          );
        }
        return parts.join("");
      }
    }
  });

  // node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js
  var require_ieee754 = __commonJS({
    "node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js"(exports) {
      init_dist();
      exports.read = function(buffer, offset, isLE, mLen, nBytes) {
        var e, m;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i = isLE ? nBytes - 1 : 0;
        var d = isLE ? -1 : 1;
        var s2 = buffer[offset + i];
        i += d;
        e = s2 & (1 << -nBits) - 1;
        s2 >>= -nBits;
        nBits += eLen;
        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {
        }
        m = e & (1 << -nBits) - 1;
        e >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {
        }
        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
          return m ? NaN : (s2 ? -1 : 1) * Infinity;
        } else {
          m = m + Math.pow(2, mLen);
          e = e - eBias;
        }
        return (s2 ? -1 : 1) * m * Math.pow(2, e - mLen);
      };
      exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
        var e, m, c;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var i = isLE ? 0 : nBytes - 1;
        var d = isLE ? 1 : -1;
        var s2 = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
        value = Math.abs(value);
        if (isNaN(value) || value === Infinity) {
          m = isNaN(value) ? 1 : 0;
          e = eMax;
        } else {
          e = Math.floor(Math.log(value) / Math.LN2);
          if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * Math.pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }
          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
          }
        }
        for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {
        }
        e = e << mLen | m;
        eLen += mLen;
        for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {
        }
        buffer[offset + i - d] |= s2 * 128;
      };
    }
  });

  // node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js
  var require_buffer = __commonJS({
    "node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js"(exports) {
      "use strict";
      init_dist();
      var base64 = require_base64_js();
      var ieee754 = require_ieee754();
      var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
      exports.Buffer = Buffer2;
      exports.SlowBuffer = SlowBuffer;
      exports.INSPECT_MAX_BYTES = 50;
      var K_MAX_LENGTH = 2147483647;
      exports.kMaxLength = K_MAX_LENGTH;
      var { Uint8Array: GlobalUint8Array, ArrayBuffer: GlobalArrayBuffer, SharedArrayBuffer: GlobalSharedArrayBuffer } = globalThis;
      Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
      if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
        console.error(
          "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
        );
      }
      function typedArraySupport() {
        try {
          const arr = new GlobalUint8Array(1);
          const proto = { foo: function() {
            return 42;
          } };
          Object.setPrototypeOf(proto, GlobalUint8Array.prototype);
          Object.setPrototypeOf(arr, proto);
          return arr.foo() === 42;
        } catch (e) {
          return false;
        }
      }
      Object.defineProperty(Buffer2.prototype, "parent", {
        enumerable: true,
        get: function() {
          if (!Buffer2.isBuffer(this))
            return void 0;
          return this.buffer;
        }
      });
      Object.defineProperty(Buffer2.prototype, "offset", {
        enumerable: true,
        get: function() {
          if (!Buffer2.isBuffer(this))
            return void 0;
          return this.byteOffset;
        }
      });
      function createBuffer(length) {
        if (length > K_MAX_LENGTH) {
          throw new RangeError('The value "' + length + '" is invalid for option "size"');
        }
        const buf = new GlobalUint8Array(length);
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
      }
      function Buffer2(arg, encodingOrOffset, length) {
        if (typeof arg === "number") {
          if (typeof encodingOrOffset === "string") {
            throw new TypeError(
              'The "string" argument must be of type string. Received type number'
            );
          }
          return allocUnsafe(arg);
        }
        return from(arg, encodingOrOffset, length);
      }
      Buffer2.poolSize = 8192;
      function from(value, encodingOrOffset, length) {
        if (typeof value === "string") {
          return fromString(value, encodingOrOffset);
        }
        if (GlobalArrayBuffer.isView(value)) {
          return fromArrayView(value);
        }
        if (value == null) {
          throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
          );
        }
        if (isInstance(value, GlobalArrayBuffer) || value && isInstance(value.buffer, GlobalArrayBuffer)) {
          return fromArrayBuffer(value, encodingOrOffset, length);
        }
        if (typeof GlobalSharedArrayBuffer !== "undefined" && (isInstance(value, GlobalSharedArrayBuffer) || value && isInstance(value.buffer, GlobalSharedArrayBuffer))) {
          return fromArrayBuffer(value, encodingOrOffset, length);
        }
        if (typeof value === "number") {
          throw new TypeError(
            'The "value" argument must not be of type number. Received type number'
          );
        }
        const valueOf = value.valueOf && value.valueOf();
        if (valueOf != null && valueOf !== value) {
          return Buffer2.from(valueOf, encodingOrOffset, length);
        }
        const b = fromObject(value);
        if (b)
          return b;
        if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
          return Buffer2.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
        }
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
        );
      }
      Buffer2.from = function(value, encodingOrOffset, length) {
        return from(value, encodingOrOffset, length);
      };
      Object.setPrototypeOf(Buffer2.prototype, GlobalUint8Array.prototype);
      Object.setPrototypeOf(Buffer2, GlobalUint8Array);
      function assertSize(size) {
        if (typeof size !== "number") {
          throw new TypeError('"size" argument must be of type number');
        } else if (size < 0) {
          throw new RangeError('The value "' + size + '" is invalid for option "size"');
        }
      }
      function alloc(size, fill, encoding) {
        assertSize(size);
        if (size <= 0) {
          return createBuffer(size);
        }
        if (fill !== void 0) {
          return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
        }
        return createBuffer(size);
      }
      Buffer2.alloc = function(size, fill, encoding) {
        return alloc(size, fill, encoding);
      };
      function allocUnsafe(size) {
        assertSize(size);
        return createBuffer(size < 0 ? 0 : checked(size) | 0);
      }
      Buffer2.allocUnsafe = function(size) {
        return allocUnsafe(size);
      };
      Buffer2.allocUnsafeSlow = function(size) {
        return allocUnsafe(size);
      };
      function fromString(string, encoding) {
        if (typeof encoding !== "string" || encoding === "") {
          encoding = "utf8";
        }
        if (!Buffer2.isEncoding(encoding)) {
          throw new TypeError("Unknown encoding: " + encoding);
        }
        const length = byteLength(string, encoding) | 0;
        let buf = createBuffer(length);
        const actual = buf.write(string, encoding);
        if (actual !== length) {
          buf = buf.slice(0, actual);
        }
        return buf;
      }
      function fromArrayLike(array) {
        const length = array.length < 0 ? 0 : checked(array.length) | 0;
        const buf = createBuffer(length);
        for (let i = 0; i < length; i += 1) {
          buf[i] = array[i] & 255;
        }
        return buf;
      }
      function fromArrayView(arrayView) {
        if (isInstance(arrayView, GlobalUint8Array)) {
          const copy = new GlobalUint8Array(arrayView);
          return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
        }
        return fromArrayLike(arrayView);
      }
      function fromArrayBuffer(array, byteOffset, length) {
        if (byteOffset < 0 || array.byteLength < byteOffset) {
          throw new RangeError('"offset" is outside of buffer bounds');
        }
        if (array.byteLength < byteOffset + (length || 0)) {
          throw new RangeError('"length" is outside of buffer bounds');
        }
        let buf;
        if (byteOffset === void 0 && length === void 0) {
          buf = new GlobalUint8Array(array);
        } else if (length === void 0) {
          buf = new GlobalUint8Array(array, byteOffset);
        } else {
          buf = new GlobalUint8Array(array, byteOffset, length);
        }
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
      }
      function fromObject(obj) {
        if (Buffer2.isBuffer(obj)) {
          const len = checked(obj.length) | 0;
          const buf = createBuffer(len);
          if (buf.length === 0) {
            return buf;
          }
          obj.copy(buf, 0, 0, len);
          return buf;
        }
        if (obj.length !== void 0) {
          if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
            return createBuffer(0);
          }
          return fromArrayLike(obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
          return fromArrayLike(obj.data);
        }
      }
      function checked(length) {
        if (length >= K_MAX_LENGTH) {
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
        }
        return length | 0;
      }
      function SlowBuffer(length) {
        if (+length != length) {
          length = 0;
        }
        return Buffer2.alloc(+length);
      }
      Buffer2.isBuffer = function isBuffer(b) {
        return b != null && b._isBuffer === true && b !== Buffer2.prototype;
      };
      Buffer2.compare = function compare(a, b) {
        if (isInstance(a, GlobalUint8Array))
          a = Buffer2.from(a, a.offset, a.byteLength);
        if (isInstance(b, GlobalUint8Array))
          b = Buffer2.from(b, b.offset, b.byteLength);
        if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {
          throw new TypeError(
            'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
          );
        }
        if (a === b)
          return 0;
        let x = a.length;
        let y = b.length;
        for (let i = 0, len = Math.min(x, y); i < len; ++i) {
          if (a[i] !== b[i]) {
            x = a[i];
            y = b[i];
            break;
          }
        }
        if (x < y)
          return -1;
        if (y < x)
          return 1;
        return 0;
      };
      Buffer2.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      };
      Buffer2.concat = function concat(list, length) {
        if (!Array.isArray(list)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }
        if (list.length === 0) {
          return Buffer2.alloc(0);
        }
        let i;
        if (length === void 0) {
          length = 0;
          for (i = 0; i < list.length; ++i) {
            length += list[i].length;
          }
        }
        const buffer = Buffer2.allocUnsafe(length);
        let pos = 0;
        for (i = 0; i < list.length; ++i) {
          let buf = list[i];
          if (isInstance(buf, GlobalUint8Array)) {
            if (pos + buf.length > buffer.length) {
              if (!Buffer2.isBuffer(buf))
                buf = Buffer2.from(buf);
              buf.copy(buffer, pos);
            } else {
              GlobalUint8Array.prototype.set.call(
                buffer,
                buf,
                pos
              );
            }
          } else if (!Buffer2.isBuffer(buf)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          } else {
            buf.copy(buffer, pos);
          }
          pos += buf.length;
        }
        return buffer;
      };
      function byteLength(string, encoding) {
        if (Buffer2.isBuffer(string)) {
          return string.length;
        }
        if (GlobalArrayBuffer.isView(string) || isInstance(string, GlobalArrayBuffer)) {
          return string.byteLength;
        }
        if (typeof string !== "string") {
          throw new TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string
          );
        }
        const len = string.length;
        const mustMatch = arguments.length > 2 && arguments[2] === true;
        if (!mustMatch && len === 0)
          return 0;
        let loweredCase = false;
        for (; ; ) {
          switch (encoding) {
            case "ascii":
            case "latin1":
            case "binary":
              return len;
            case "utf8":
            case "utf-8":
              return utf8ToBytes(string).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return len * 2;
            case "hex":
              return len >>> 1;
            case "base64":
              return base64ToBytes(string).length;
            default:
              if (loweredCase) {
                return mustMatch ? -1 : utf8ToBytes(string).length;
              }
              encoding = ("" + encoding).toLowerCase();
              loweredCase = true;
          }
        }
      }
      Buffer2.byteLength = byteLength;
      function slowToString(encoding, start, end) {
        let loweredCase = false;
        if (start === void 0 || start < 0) {
          start = 0;
        }
        if (start > this.length) {
          return "";
        }
        if (end === void 0 || end > this.length) {
          end = this.length;
        }
        if (end <= 0) {
          return "";
        }
        end >>>= 0;
        start >>>= 0;
        if (end <= start) {
          return "";
        }
        if (!encoding)
          encoding = "utf8";
        while (true) {
          switch (encoding) {
            case "hex":
              return hexSlice(this, start, end);
            case "utf8":
            case "utf-8":
              return utf8Slice(this, start, end);
            case "ascii":
              return asciiSlice(this, start, end);
            case "latin1":
            case "binary":
              return latin1Slice(this, start, end);
            case "base64":
              return base64Slice(this, start, end);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return utf16leSlice(this, start, end);
            default:
              if (loweredCase)
                throw new TypeError("Unknown encoding: " + encoding);
              encoding = (encoding + "").toLowerCase();
              loweredCase = true;
          }
        }
      }
      Buffer2.prototype._isBuffer = true;
      function swap(b, n, m) {
        const i = b[n];
        b[n] = b[m];
        b[m] = i;
      }
      Buffer2.prototype.swap16 = function swap16() {
        const len = this.length;
        if (len % 2 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for (let i = 0; i < len; i += 2) {
          swap(this, i, i + 1);
        }
        return this;
      };
      Buffer2.prototype.swap32 = function swap32() {
        const len = this.length;
        if (len % 4 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for (let i = 0; i < len; i += 4) {
          swap(this, i, i + 3);
          swap(this, i + 1, i + 2);
        }
        return this;
      };
      Buffer2.prototype.swap64 = function swap64() {
        const len = this.length;
        if (len % 8 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for (let i = 0; i < len; i += 8) {
          swap(this, i, i + 7);
          swap(this, i + 1, i + 6);
          swap(this, i + 2, i + 5);
          swap(this, i + 3, i + 4);
        }
        return this;
      };
      Buffer2.prototype.toString = function toString() {
        const length = this.length;
        if (length === 0)
          return "";
        if (arguments.length === 0)
          return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
      };
      Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
      Buffer2.prototype.equals = function equals(b) {
        if (!Buffer2.isBuffer(b))
          throw new TypeError("Argument must be a Buffer");
        if (this === b)
          return true;
        return Buffer2.compare(this, b) === 0;
      };
      Buffer2.prototype.inspect = function inspect() {
        let str = "";
        const max = exports.INSPECT_MAX_BYTES;
        str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > max)
          str += " ... ";
        return "<Buffer " + str + ">";
      };
      if (customInspectSymbol) {
        Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;
      }
      Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (isInstance(target, GlobalUint8Array)) {
          target = Buffer2.from(target, target.offset, target.byteLength);
        }
        if (!Buffer2.isBuffer(target)) {
          throw new TypeError(
            'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target
          );
        }
        if (start === void 0) {
          start = 0;
        }
        if (end === void 0) {
          end = target ? target.length : 0;
        }
        if (thisStart === void 0) {
          thisStart = 0;
        }
        if (thisEnd === void 0) {
          thisEnd = this.length;
        }
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
          throw new RangeError("out of range index");
        }
        if (thisStart >= thisEnd && start >= end) {
          return 0;
        }
        if (thisStart >= thisEnd) {
          return -1;
        }
        if (start >= end) {
          return 1;
        }
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target)
          return 0;
        let x = thisEnd - thisStart;
        let y = end - start;
        const len = Math.min(x, y);
        const thisCopy = this.slice(thisStart, thisEnd);
        const targetCopy = target.slice(start, end);
        for (let i = 0; i < len; ++i) {
          if (thisCopy[i] !== targetCopy[i]) {
            x = thisCopy[i];
            y = targetCopy[i];
            break;
          }
        }
        if (x < y)
          return -1;
        if (y < x)
          return 1;
        return 0;
      };
      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        if (buffer.length === 0)
          return -1;
        if (typeof byteOffset === "string") {
          encoding = byteOffset;
          byteOffset = 0;
        } else if (byteOffset > 2147483647) {
          byteOffset = 2147483647;
        } else if (byteOffset < -2147483648) {
          byteOffset = -2147483648;
        }
        byteOffset = +byteOffset;
        if (numberIsNaN(byteOffset)) {
          byteOffset = dir ? 0 : buffer.length - 1;
        }
        if (byteOffset < 0)
          byteOffset = buffer.length + byteOffset;
        if (byteOffset >= buffer.length) {
          if (dir)
            return -1;
          else
            byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
          if (dir)
            byteOffset = 0;
          else
            return -1;
        }
        if (typeof val === "string") {
          val = Buffer2.from(val, encoding);
        }
        if (Buffer2.isBuffer(val)) {
          if (val.length === 0) {
            return -1;
          }
          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
        } else if (typeof val === "number") {
          val = val & 255;
          if (typeof GlobalUint8Array.prototype.indexOf === "function") {
            if (dir) {
              return GlobalUint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            } else {
              return GlobalUint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
            }
          }
          return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        let indexSize = 1;
        let arrLength = arr.length;
        let valLength = val.length;
        if (encoding !== void 0) {
          encoding = String(encoding).toLowerCase();
          if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
            if (arr.length < 2 || val.length < 2) {
              return -1;
            }
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
          }
        }
        function read(buf, i2) {
          if (indexSize === 1) {
            return buf[i2];
          } else {
            return buf.readUInt16BE(i2 * indexSize);
          }
        }
        let i;
        if (dir) {
          let foundIndex = -1;
          for (i = byteOffset; i < arrLength; i++) {
            if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
              if (foundIndex === -1)
                foundIndex = i;
              if (i - foundIndex + 1 === valLength)
                return foundIndex * indexSize;
            } else {
              if (foundIndex !== -1)
                i -= i - foundIndex;
              foundIndex = -1;
            }
          }
        } else {
          if (byteOffset + valLength > arrLength)
            byteOffset = arrLength - valLength;
          for (i = byteOffset; i >= 0; i--) {
            let found = true;
            for (let j = 0; j < valLength; j++) {
              if (read(arr, i + j) !== read(val, j)) {
                found = false;
                break;
              }
            }
            if (found)
              return i;
          }
        }
        return -1;
      }
      Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
        return this.indexOf(val, byteOffset, encoding) !== -1;
      };
      Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
      };
      Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
      };
      function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        const remaining = buf.length - offset;
        if (!length) {
          length = remaining;
        } else {
          length = Number(length);
          if (length > remaining) {
            length = remaining;
          }
        }
        const strLen = string.length;
        if (length > strLen / 2) {
          length = strLen / 2;
        }
        let i;
        for (i = 0; i < length; ++i) {
          const parsed = parseInt(string.substr(i * 2, 2), 16);
          if (numberIsNaN(parsed))
            return i;
          buf[offset + i] = parsed;
        }
        return i;
      }
      function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
      }
      function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
      }
      function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
      }
      function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
      }
      Buffer2.prototype.write = function write(string, offset, length, encoding) {
        if (offset === void 0) {
          encoding = "utf8";
          length = this.length;
          offset = 0;
        } else if (length === void 0 && typeof offset === "string") {
          encoding = offset;
          length = this.length;
          offset = 0;
        } else if (isFinite(offset)) {
          offset = offset >>> 0;
          if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === void 0)
              encoding = "utf8";
          } else {
            encoding = length;
            length = void 0;
          }
        } else {
          throw new Error(
            "Buffer.write(string, encoding, offset[, length]) is no longer supported"
          );
        }
        const remaining = this.length - offset;
        if (length === void 0 || length > remaining)
          length = remaining;
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
          throw new RangeError("Attempt to write outside buffer bounds");
        }
        if (!encoding)
          encoding = "utf8";
        let loweredCase = false;
        for (; ; ) {
          switch (encoding) {
            case "hex":
              return hexWrite(this, string, offset, length);
            case "utf8":
            case "utf-8":
              return utf8Write(this, string, offset, length);
            case "ascii":
            case "latin1":
            case "binary":
              return asciiWrite(this, string, offset, length);
            case "base64":
              return base64Write(this, string, offset, length);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ucs2Write(this, string, offset, length);
            default:
              if (loweredCase)
                throw new TypeError("Unknown encoding: " + encoding);
              encoding = ("" + encoding).toLowerCase();
              loweredCase = true;
          }
        }
      };
      Buffer2.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function base64Slice(buf, start, end) {
        if (start === 0 && end === buf.length) {
          return base64.fromByteArray(buf);
        } else {
          return base64.fromByteArray(buf.slice(start, end));
        }
      }
      function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        const res = [];
        let i = start;
        while (i < end) {
          const firstByte = buf[i];
          let codePoint = null;
          let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
          if (i + bytesPerSequence <= end) {
            let secondByte, thirdByte, fourthByte, tempCodePoint;
            switch (bytesPerSequence) {
              case 1:
                if (firstByte < 128) {
                  codePoint = firstByte;
                }
                break;
              case 2:
                secondByte = buf[i + 1];
                if ((secondByte & 192) === 128) {
                  tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                  if (tempCodePoint > 127) {
                    codePoint = tempCodePoint;
                  }
                }
                break;
              case 3:
                secondByte = buf[i + 1];
                thirdByte = buf[i + 2];
                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                  tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                  if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                    codePoint = tempCodePoint;
                  }
                }
                break;
              case 4:
                secondByte = buf[i + 1];
                thirdByte = buf[i + 2];
                fourthByte = buf[i + 3];
                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                  tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                  if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                    codePoint = tempCodePoint;
                  }
                }
            }
          }
          if (codePoint === null) {
            codePoint = 65533;
            bytesPerSequence = 1;
          } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | codePoint & 1023;
          }
          res.push(codePoint);
          i += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
      }
      var MAX_ARGUMENTS_LENGTH = 4096;
      function decodeCodePointsArray(codePoints) {
        const len = codePoints.length;
        if (len <= MAX_ARGUMENTS_LENGTH) {
          return String.fromCharCode.apply(String, codePoints);
        }
        let res = "";
        let i = 0;
        while (i < len) {
          res += String.fromCharCode.apply(
            String,
            codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
          );
        }
        return res;
      }
      function asciiSlice(buf, start, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for (let i = start; i < end; ++i) {
          ret += String.fromCharCode(buf[i] & 127);
        }
        return ret;
      }
      function latin1Slice(buf, start, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for (let i = start; i < end; ++i) {
          ret += String.fromCharCode(buf[i]);
        }
        return ret;
      }
      function hexSlice(buf, start, end) {
        const len = buf.length;
        if (!start || start < 0)
          start = 0;
        if (!end || end < 0 || end > len)
          end = len;
        let out = "";
        for (let i = start; i < end; ++i) {
          out += hexSliceLookupTable[buf[i]];
        }
        return out;
      }
      function utf16leSlice(buf, start, end) {
        const bytes = buf.slice(start, end);
        let res = "";
        for (let i = 0; i < bytes.length - 1; i += 2) {
          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
        }
        return res;
      }
      Buffer2.prototype.slice = function slice(start, end) {
        const len = this.length;
        start = ~~start;
        end = end === void 0 ? len : ~~end;
        if (start < 0) {
          start += len;
          if (start < 0)
            start = 0;
        } else if (start > len) {
          start = len;
        }
        if (end < 0) {
          end += len;
          if (end < 0)
            end = 0;
        } else if (end > len) {
          end = len;
        }
        if (end < start)
          end = start;
        const newBuf = this.subarray(start, end);
        Object.setPrototypeOf(newBuf, Buffer2.prototype);
        return newBuf;
      };
      function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0)
          throw new RangeError("offset is not uint");
        if (offset + ext > length)
          throw new RangeError("Trying to access beyond buffer length");
      }
      Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert)
          checkOffset(offset, byteLength2, this.length);
        let val = this[offset];
        let mul = 1;
        let i = 0;
        while (++i < byteLength2 && (mul *= 256)) {
          val += this[offset + i] * mul;
        }
        return val;
      };
      Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          checkOffset(offset, byteLength2, this.length);
        }
        let val = this[offset + --byteLength2];
        let mul = 1;
        while (byteLength2 > 0 && (mul *= 256)) {
          val += this[offset + --byteLength2] * mul;
        }
        return val;
      };
      Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
      };
      Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
        const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
        return BigInt(lo) + (BigInt(hi) << BigInt(32));
      });
      Buffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
        return (BigInt(hi) << BigInt(32)) + BigInt(lo);
      });
      Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert)
          checkOffset(offset, byteLength2, this.length);
        let val = this[offset];
        let mul = 1;
        let i = 0;
        while (++i < byteLength2 && (mul *= 256)) {
          val += this[offset + i] * mul;
        }
        mul *= 128;
        if (val >= mul)
          val -= Math.pow(2, 8 * byteLength2);
        return val;
      };
      Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert)
          checkOffset(offset, byteLength2, this.length);
        let i = byteLength2;
        let mul = 1;
        let val = this[offset + --i];
        while (i > 0 && (mul *= 256)) {
          val += this[offset + --i] * mul;
        }
        mul *= 128;
        if (val >= mul)
          val -= Math.pow(2, 8 * byteLength2);
        return val;
      };
      Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 1, this.length);
        if (!(this[offset] & 128))
          return this[offset];
        return (255 - this[offset] + 1) * -1;
      };
      Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        const val = this[offset] | this[offset + 1] << 8;
        return val & 32768 ? val | 4294901760 : val;
      };
      Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        const val = this[offset + 1] | this[offset] << 8;
        return val & 32768 ? val | 4294901760 : val;
      };
      Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
        return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
      });
      Buffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const val = (first << 24) + // Overflow
        this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
      });
      Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
      };
      Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
      };
      Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
      };
      Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
      };
      function checkInt(buf, value, offset, ext, max, min) {
        if (!Buffer2.isBuffer(buf))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value > max || value < min)
          throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length)
          throw new RangeError("Index out of range");
      }
      Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value, offset, byteLength2, maxBytes, 0);
        }
        let mul = 1;
        let i = 0;
        this[offset] = value & 255;
        while (++i < byteLength2 && (mul *= 256)) {
          this[offset + i] = value / mul & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value, offset, byteLength2, maxBytes, 0);
        }
        let i = byteLength2 - 1;
        let mul = 1;
        this[offset + i] = value & 255;
        while (--i >= 0 && (mul *= 256)) {
          this[offset + i] = value / mul & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 1, 255, 0);
        this[offset] = value & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 65535, 0);
        this[offset] = value & 255;
        this[offset + 1] = value >>> 8;
        return offset + 2;
      };
      Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 65535, 0);
        this[offset] = value >>> 8;
        this[offset + 1] = value & 255;
        return offset + 2;
      };
      Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 4294967295, 0);
        this[offset + 3] = value >>> 24;
        this[offset + 2] = value >>> 16;
        this[offset + 1] = value >>> 8;
        this[offset] = value & 255;
        return offset + 4;
      };
      Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 4294967295, 0);
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 255;
        return offset + 4;
      };
      function wrtBigUInt64LE(buf, value, offset, min, max) {
        checkIntBI(value, min, max, buf, offset, 7);
        let lo = Number(value & BigInt(4294967295));
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        let hi = Number(value >> BigInt(32) & BigInt(4294967295));
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        return offset;
      }
      function wrtBigUInt64BE(buf, value, offset, min, max) {
        checkIntBI(value, min, max, buf, offset, 7);
        let lo = Number(value & BigInt(4294967295));
        buf[offset + 7] = lo;
        lo = lo >> 8;
        buf[offset + 6] = lo;
        lo = lo >> 8;
        buf[offset + 5] = lo;
        lo = lo >> 8;
        buf[offset + 4] = lo;
        let hi = Number(value >> BigInt(32) & BigInt(4294967295));
        buf[offset + 3] = hi;
        hi = hi >> 8;
        buf[offset + 2] = hi;
        hi = hi >> 8;
        buf[offset + 1] = hi;
        hi = hi >> 8;
        buf[offset] = hi;
        return offset + 8;
      }
      Buffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
        return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      Buffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
        return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          const limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value, offset, byteLength2, limit - 1, -limit);
        }
        let i = 0;
        let mul = 1;
        let sub = 0;
        this[offset] = value & 255;
        while (++i < byteLength2 && (mul *= 256)) {
          if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
            sub = 1;
          }
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          const limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value, offset, byteLength2, limit - 1, -limit);
        }
        let i = byteLength2 - 1;
        let mul = 1;
        let sub = 0;
        this[offset + i] = value & 255;
        while (--i >= 0 && (mul *= 256)) {
          if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
            sub = 1;
          }
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 1, 127, -128);
        if (value < 0)
          value = 255 + value + 1;
        this[offset] = value & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 32767, -32768);
        this[offset] = value & 255;
        this[offset + 1] = value >>> 8;
        return offset + 2;
      };
      Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 32767, -32768);
        this[offset] = value >>> 8;
        this[offset + 1] = value & 255;
        return offset + 2;
      };
      Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 2147483647, -2147483648);
        this[offset] = value & 255;
        this[offset + 1] = value >>> 8;
        this[offset + 2] = value >>> 16;
        this[offset + 3] = value >>> 24;
        return offset + 4;
      };
      Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (value < 0)
          value = 4294967295 + value + 1;
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 255;
        return offset + 4;
      };
      Buffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
        return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      Buffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
        return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function checkIEEE754(buf, value, offset, ext, max, min) {
        if (offset + ext > buf.length)
          throw new RangeError("Index out of range");
        if (offset < 0)
          throw new RangeError("Index out of range");
      }
      function writeFloat(buf, value, offset, littleEndian, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
        }
        ieee754.write(buf, value, offset, littleEndian, 23, 4);
        return offset + 4;
      }
      Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
      };
      Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
      };
      function writeDouble(buf, value, offset, littleEndian, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
        }
        ieee754.write(buf, value, offset, littleEndian, 52, 8);
        return offset + 8;
      }
      Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
      };
      Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
      };
      Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
        if (!Buffer2.isBuffer(target))
          throw new TypeError("argument should be a Buffer");
        if (!start)
          start = 0;
        if (!end && end !== 0)
          end = this.length;
        if (targetStart >= target.length)
          targetStart = target.length;
        if (!targetStart)
          targetStart = 0;
        if (end > 0 && end < start)
          end = start;
        if (end === start)
          return 0;
        if (target.length === 0 || this.length === 0)
          return 0;
        if (targetStart < 0) {
          throw new RangeError("targetStart out of bounds");
        }
        if (start < 0 || start >= this.length)
          throw new RangeError("Index out of range");
        if (end < 0)
          throw new RangeError("sourceEnd out of bounds");
        if (end > this.length)
          end = this.length;
        if (target.length - targetStart < end - start) {
          end = target.length - targetStart + start;
        }
        const len = end - start;
        if (this === target && typeof GlobalUint8Array.prototype.copyWithin === "function") {
          this.copyWithin(targetStart, start, end);
        } else {
          GlobalUint8Array.prototype.set.call(
            target,
            this.subarray(start, end),
            targetStart
          );
        }
        return len;
      };
      Buffer2.prototype.fill = function fill(val, start, end, encoding) {
        if (typeof val === "string") {
          if (typeof start === "string") {
            encoding = start;
            start = 0;
            end = this.length;
          } else if (typeof end === "string") {
            encoding = end;
            end = this.length;
          }
          if (encoding !== void 0 && typeof encoding !== "string") {
            throw new TypeError("encoding must be a string");
          }
          if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
            throw new TypeError("Unknown encoding: " + encoding);
          }
          if (val.length === 1) {
            const code = val.charCodeAt(0);
            if (encoding === "utf8" && code < 128 || encoding === "latin1") {
              val = code;
            }
          }
        } else if (typeof val === "number") {
          val = val & 255;
        } else if (typeof val === "boolean") {
          val = Number(val);
        }
        if (start < 0 || this.length < start || this.length < end) {
          throw new RangeError("Out of range index");
        }
        if (end <= start) {
          return this;
        }
        start = start >>> 0;
        end = end === void 0 ? this.length : end >>> 0;
        if (!val)
          val = 0;
        let i;
        if (typeof val === "number") {
          for (i = start; i < end; ++i) {
            this[i] = val;
          }
        } else {
          const bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);
          const len = bytes.length;
          if (len === 0) {
            throw new TypeError('The value "' + val + '" is invalid for argument "value"');
          }
          for (i = 0; i < end - start; ++i) {
            this[i + start] = bytes[i % len];
          }
        }
        return this;
      };
      var errors = {};
      function E(sym, getMessage, Base) {
        errors[sym] = class NodeError extends Base {
          constructor() {
            super();
            Object.defineProperty(this, "message", {
              value: getMessage.apply(this, arguments),
              writable: true,
              configurable: true
            });
            this.name = `${this.name} [${sym}]`;
            this.stack;
            delete this.name;
          }
          get code() {
            return sym;
          }
          set code(value) {
            Object.defineProperty(this, "code", {
              configurable: true,
              enumerable: true,
              value,
              writable: true
            });
          }
          toString() {
            return `${this.name} [${sym}]: ${this.message}`;
          }
        };
      }
      E(
        "ERR_BUFFER_OUT_OF_BOUNDS",
        function(name) {
          if (name) {
            return `${name} is outside of buffer bounds`;
          }
          return "Attempt to access memory outside buffer bounds";
        },
        RangeError
      );
      E(
        "ERR_INVALID_ARG_TYPE",
        function(name, actual) {
          return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
        },
        TypeError
      );
      E(
        "ERR_OUT_OF_RANGE",
        function(str, range, input) {
          let msg = `The value of "${str}" is out of range.`;
          let received = input;
          if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
            received = addNumericalSeparator(String(input));
          } else if (typeof input === "bigint") {
            received = String(input);
            if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
              received = addNumericalSeparator(received);
            }
            received += "n";
          }
          msg += ` It must be ${range}. Received ${received}`;
          return msg;
        },
        RangeError
      );
      function addNumericalSeparator(val) {
        let res = "";
        let i = val.length;
        const start = val[0] === "-" ? 1 : 0;
        for (; i >= start + 4; i -= 3) {
          res = `_${val.slice(i - 3, i)}${res}`;
        }
        return `${val.slice(0, i)}${res}`;
      }
      function checkBounds(buf, offset, byteLength2) {
        validateNumber(offset, "offset");
        if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
          boundsError(offset, buf.length - (byteLength2 + 1));
        }
      }
      function checkIntBI(value, min, max, buf, offset, byteLength2) {
        if (value > max || value < min) {
          const n = typeof min === "bigint" ? "n" : "";
          let range;
          if (byteLength2 > 3) {
            if (min === 0 || min === BigInt(0)) {
              range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;
            } else {
              range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;
            }
          } else {
            range = `>= ${min}${n} and <= ${max}${n}`;
          }
          throw new errors.ERR_OUT_OF_RANGE("value", range, value);
        }
        checkBounds(buf, offset, byteLength2);
      }
      function validateNumber(value, name) {
        if (typeof value !== "number") {
          throw new errors.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
      }
      function boundsError(value, length, type) {
        if (Math.floor(value) !== value) {
          validateNumber(value, type);
          throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
        }
        if (length < 0) {
          throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
        }
        throw new errors.ERR_OUT_OF_RANGE(
          type || "offset",
          `>= ${type ? 1 : 0} and <= ${length}`,
          value
        );
      }
      var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
      function base64clean(str) {
        str = str.split("=")[0];
        str = str.trim().replace(INVALID_BASE64_RE, "");
        if (str.length < 2)
          return "";
        while (str.length % 4 !== 0) {
          str = str + "=";
        }
        return str;
      }
      function utf8ToBytes(string, units) {
        units = units || Infinity;
        let codePoint;
        const length = string.length;
        let leadSurrogate = null;
        const bytes = [];
        for (let i = 0; i < length; ++i) {
          codePoint = string.charCodeAt(i);
          if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
              if (codePoint > 56319) {
                if ((units -= 3) > -1)
                  bytes.push(239, 191, 189);
                continue;
              } else if (i + 1 === length) {
                if ((units -= 3) > -1)
                  bytes.push(239, 191, 189);
                continue;
              }
              leadSurrogate = codePoint;
              continue;
            }
            if (codePoint < 56320) {
              if ((units -= 3) > -1)
                bytes.push(239, 191, 189);
              leadSurrogate = codePoint;
              continue;
            }
            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
          } else if (leadSurrogate) {
            if ((units -= 3) > -1)
              bytes.push(239, 191, 189);
          }
          leadSurrogate = null;
          if (codePoint < 128) {
            if ((units -= 1) < 0)
              break;
            bytes.push(codePoint);
          } else if (codePoint < 2048) {
            if ((units -= 2) < 0)
              break;
            bytes.push(
              codePoint >> 6 | 192,
              codePoint & 63 | 128
            );
          } else if (codePoint < 65536) {
            if ((units -= 3) < 0)
              break;
            bytes.push(
              codePoint >> 12 | 224,
              codePoint >> 6 & 63 | 128,
              codePoint & 63 | 128
            );
          } else if (codePoint < 1114112) {
            if ((units -= 4) < 0)
              break;
            bytes.push(
              codePoint >> 18 | 240,
              codePoint >> 12 & 63 | 128,
              codePoint >> 6 & 63 | 128,
              codePoint & 63 | 128
            );
          } else {
            throw new Error("Invalid code point");
          }
        }
        return bytes;
      }
      function asciiToBytes(str) {
        const byteArray = [];
        for (let i = 0; i < str.length; ++i) {
          byteArray.push(str.charCodeAt(i) & 255);
        }
        return byteArray;
      }
      function utf16leToBytes(str, units) {
        let c, hi, lo;
        const byteArray = [];
        for (let i = 0; i < str.length; ++i) {
          if ((units -= 2) < 0)
            break;
          c = str.charCodeAt(i);
          hi = c >> 8;
          lo = c % 256;
          byteArray.push(lo);
          byteArray.push(hi);
        }
        return byteArray;
      }
      function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
      }
      function blitBuffer(src, dst, offset, length) {
        let i;
        for (i = 0; i < length; ++i) {
          if (i + offset >= dst.length || i >= src.length)
            break;
          dst[i + offset] = src[i];
        }
        return i;
      }
      function isInstance(obj, type) {
        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
      }
      function numberIsNaN(obj) {
        return obj !== obj;
      }
      var hexSliceLookupTable = function() {
        const alphabet = "0123456789abcdef";
        const table = new Array(256);
        for (let i = 0; i < 16; ++i) {
          const i16 = i * 16;
          for (let j = 0; j < 16; ++j) {
            table[i16 + j] = alphabet[i] + alphabet[j];
          }
        }
        return table;
      }();
      function defineBigIntMethod(fn) {
        return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
      }
      function BufferBigIntNotDefined() {
        throw new Error("BigInt not supported");
      }
    }
  });

  // node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js
  var require_browser = __commonJS({
    "node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js"(exports, module) {
      init_dist();
      var process = module.exports = {};
      var cachedSetTimeout;
      var cachedClearTimeout;
      function defaultSetTimout() {
        throw new Error("setTimeout has not been defined");
      }
      function defaultClearTimeout() {
        throw new Error("clearTimeout has not been defined");
      }
      (function() {
        try {
          if (typeof setTimeout === "function") {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === "function") {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          return setTimeout(fun, 0);
        }
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }
        try {
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e2) {
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          return clearTimeout(marker);
        }
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }
        try {
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            return cachedClearTimeout.call(null, marker);
          } catch (e2) {
            return cachedClearTimeout.call(this, marker);
          }
        }
      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;
      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }
      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;
        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }
      process.nextTick = function(fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      process.title = "browser";
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = "";
      process.versions = {};
      function noop() {
      }
      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;
      process.prependListener = noop;
      process.prependOnceListener = noop;
      process.listeners = function(name) {
        return [];
      };
      process.binding = function(name) {
        throw new Error("process.binding is not supported");
      };
      process.cwd = function() {
        return "/";
      };
      process.chdir = function(dir) {
        throw new Error("process.chdir is not supported");
      };
      process.umask = function() {
        return 0;
      };
    }
  });

  // shims/dist/index.js
  var import_buffer_polyfill, import_process, o;
  var init_dist = __esm({
    "shims/dist/index.js"() {
      "use strict";
      import_buffer_polyfill = __toESM(require_buffer(), 1);
      import_process = __toESM(require_browser(), 1);
      o = globalThis || void 0 || self;
    }
  });

  // shims/banner/index.cjs
  var require_banner = __commonJS({
    "shims/banner/index.cjs"() {
      init_dist();
      globalThis.Buffer = globalThis.Buffer || import_buffer_polyfill.Buffer;
      globalThis.global = globalThis.global || o;
      globalThis.process = globalThis.process || import_process.default;
    }
  });
  require_banner();
})();
/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)
*/

import {
  c as c11,
  i as i5
} from "./chunk-KZ72AKAW.js";
import {
  a as a5,
  c as c12
} from "./chunk-HVR776HG.js";
import {
  e as e4,
  r as r3
} from "./chunk-GV2SY6AK.js";
import {
  _ as _3,
  i as i3
} from "./chunk-AVCPDOF3.js";
import {
  c as c7,
  e as e2
} from "./chunk-634WFXDR.js";
import {
  c as c9,
  e as e3
} from "./chunk-7ED4QUGW.js";
import {
  a as a4,
  c as c10
} from "./chunk-KYYLAWQM.js";
import {
  c as c8,
  p as p5
} from "./chunk-4Y7TGUTE.js";
import {
  d as d3,
  s as s2
} from "./chunk-WKINBO6H.js";
import {
  a as a3,
  c as c5
} from "./chunk-Q3QJEIVO.js";
import {
  i as i4,
  p as p6
} from "./chunk-XP6UP25P.js";
import {
  _,
  t
} from "./chunk-5HMTNQ4A.js";
import {
  c as c6,
  r as r2
} from "./chunk-P4H6X7L7.js";
import {
  d as d4,
  l as l3
} from "./chunk-LEOMJSFR.js";
import {
  l as l4,
  p as p4
} from "./chunk-OKFDCTK2.js";
import {
  _ as _2,
  p as p3
} from "./chunk-6G34PXDF.js";
import {
  c as c4
} from "./chunk-XD22WRDO.js";
import {
  W
} from "./chunk-O3UG73BQ.js";
import "./chunk-VIOT7UML.js";
import "./chunk-PY4NSTUI.js";
import {
  G as G2
} from "./chunk-7JEIBMIB.js";
import "./chunk-KREOLAJN.js";
import {
  D as D3
} from "./chunk-MMXUKKUP.js";
import "./chunk-Q3U7FQDK.js";
import {
  H as H3
} from "./chunk-Q362JLS5.js";
import "./chunk-RAJMEEZK.js";
import {
  g as g2
} from "./chunk-2J2WRMQO.js";
import "./chunk-G4JGKIZX.js";
import {
  G
} from "./chunk-FCH2GSIR.js";
import "./chunk-2MP6LJQE.js";
import {
  In,
  S as S2,
  S2 as S3,
  h3 as h2,
  m as m2
} from "./chunk-3TLFSX6D.js";
import "./chunk-PT4ZAT7W.js";
import {
  faArrowLeft,
  faArrowUpRightFromSquare,
  faCheck,
  faCheckCircle,
  faChevronDown,
  faCircleNotch,
  faCoins,
  faExclamationTriangle,
  faInfo,
  faTimes,
  faWarning
} from "./chunk-TXMYIQV3.js";
import "./chunk-3MNASYTU.js";
import "./chunk-63SUVNQE.js";
import {
  require_classnames,
  u as u3
} from "./chunk-S677S367.js";
import "./chunk-UYE5PNS3.js";
import "./chunk-I55AVBBH.js";
import "./chunk-QJNSLYW7.js";
import {
  Cn,
  Si
} from "./chunk-Q23JG3F6.js";
import "./chunk-FKHV3UFA.js";
import "./chunk-54JZU37V.js";
import "./chunk-X6W6HIIL.js";
import "./chunk-OUHPLTKQ.js";
import "./chunk-UUNB4OK2.js";
import "./chunk-4HAL3YZK.js";
import {
  A as A2
} from "./chunk-DANFAIW7.js";
import "./chunk-LS4IVGTJ.js";
import "./chunk-XWYMCR5D.js";
import "./chunk-EPZIXHO6.js";
import "./chunk-LWXYSBFU.js";
import "./chunk-KMNHALK3.js";
import "./chunk-MMRK53YU.js";
import {
  p as p2
} from "./chunk-KL3RVTCS.js";
import "./chunk-FUWKOYH5.js";
import "./chunk-3T2RS5VX.js";
import "./chunk-TZGAA2VZ.js";
import {
  D as D2
} from "./chunk-B2F7MDWY.js";
import {
  n
} from "./chunk-2DAT54DZ.js";
import "./chunk-W6IS4BBY.js";
import "./chunk-JRAXXMAO.js";
import "./chunk-P6UDNJ3P.js";
import "./chunk-VC3CYCM2.js";
import "./chunk-JTQZEZNW.js";
import "./chunk-3TFE24LV.js";
import "./chunk-WYYX7HOH.js";
import "./chunk-5UC3SJWB.js";
import "./chunk-OQ2X2I36.js";
import {
  d as d2
} from "./chunk-REBRBBAX.js";
import {
  e
} from "./chunk-7OSV7225.js";
import "./chunk-4Y4NHRAJ.js";
import "./chunk-X74RERH2.js";
import "./chunk-X4QWOPZU.js";
import "./chunk-KIDRYMT6.js";
import {
  A,
  c as c2
} from "./chunk-PNCNEUDJ.js";
import "./chunk-4PEQQYYX.js";
import "./chunk-NLJ5ZWYL.js";
import {
  c as c3
} from "./chunk-NWWRXY5Z.js";
import "./chunk-Q76JCXYQ.js";
import "./chunk-DLUMZFAB.js";
import {
  v as v2
} from "./chunk-Q2ALSPT4.js";
import {
  import_operation,
  z
} from "./chunk-GWYV5Q5U.js";
import "./chunk-MLGEBXDN.js";
import {
  p
} from "./chunk-4JMTGKNX.js";
import "./chunk-46YI7JI6.js";
import {
  x as x3
} from "./chunk-KBWKCXSB.js";
import "./chunk-BXH4IYHA.js";
import {
  s
} from "./chunk-CQ6QEUJE.js";
import {
  B as B2,
  S2 as S,
  f as f4,
  i2,
  l2,
  x2
} from "./chunk-DZSHGTAC.js";
import {
  H as H2,
  L as L2,
  R as R3,
  U2 as U,
  a,
  a2,
  d,
  f as f3,
  g2 as g,
  h,
  i2 as i,
  l
} from "./chunk-6OCHV4EV.js";
import "./chunk-EN76Z23Y.js";
import {
  H
} from "./chunk-GT32YW3B.js";
import {
  bignumber_default
} from "./chunk-LOZL6BFA.js";
import "./chunk-UF3DAKWQ.js";
import {
  f as f2,
  m
} from "./chunk-L7SBMHDO.js";
import {
  r
} from "./chunk-KMSODH52.js";
import "./chunk-36Z5UFBK.js";
import {
  k as k2
} from "./chunk-EBUGIFUX.js";
import "./chunk-5MLKHMR6.js";
import "./chunk-WZ74NK6U.js";
import "./chunk-T74HIW6S.js";
import {
  D,
  x2 as x
} from "./chunk-DODOUSNB.js";
import "./chunk-TILBIW7H.js";
import "./chunk-3TFTH3JT.js";
import {
  FontAwesomeIcon
} from "./chunk-7GJK4ZO7.js";
import "./chunk-66L4EHKV.js";
import "./chunk-IXILR3JC.js";
import "./chunk-N4UJNUUL.js";
import {
  T
} from "./chunk-FFVP3WMN.js";
import {
  B,
  E,
  L,
  R2 as R,
  R3 as R2,
  T as T2,
  T2 as T3,
  V,
  c3 as c,
  f,
  import_browserConstants,
  k,
  o3 as o,
  u as u2
} from "./chunk-HXV3SQ6S.js";
import {
  o as o2,
  u
} from "./chunk-EKHLTR53.js";
import {
  Q
} from "./chunk-N7F464ZJ.js";
import {
  Bt,
  Et,
  b,
  gt,
  ur,
  v,
  xt,
  yt
} from "./chunk-5CKZHQYH.js";
import {
  require_react
} from "./chunk-IRELMTUJ.js";
import {
  require_out
} from "./chunk-5HSAGO3O.js";
import "./chunk-UHKY3R7I.js";
import "./chunk-C426NY4X.js";
import "./chunk-7IOKNUEZ.js";
import "./chunk-PA4YGARE.js";
import "./chunk-FOX6T53T.js";
import "./chunk-EPGUFONN.js";
import "./chunk-KLHSS55O.js";
import "./chunk-JDLAKVPX.js";
import "./chunk-7T325JRE.js";
import {
  __toESM,
  require_dist
} from "./chunk-UOCZJ3B4.js";

// node_modules/@multiversx/sdk-dapp/UI/SignTransactionsModals/SignTransactionsModals.js
var import_dist75 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IGE34NCV.js
var import_dist40 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IIIKKJQZ.js
var import_dist19 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-W3PQIZIG.js
var import_dist18 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-AGOLXGE6.js
var import_dist17 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-KVR366XS.js
var import_dist = __toESM(require_dist());
var import_react = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
v();
var u4 = (l9) => {
  let { steps: n8, size: g7 = "large", type: o8 = "simple", collapsible: a10 = false, styles: e7 } = l9, t6 = n8.filter((r8) => !r8.hidden), m9 = t6.findIndex((r8) => r8.active), f9 = g7 === "large" ? 650 : 450, S7 = 33 / 100 * f9;
  return import_react.default.createElement("div", { className: e7 == null ? void 0 : e7.progressSteps }, t6.map((r8, p12) => import_react.default.createElement("div", { key: `progress-step-${p12}`, style: { width: a10 ? "auto" : `${100 / t6.length}%` }, className: (0, import_classnames.default)(e7 == null ? void 0 : e7.progressStep, { [e7 == null ? void 0 : e7.left]: o8 === "detailed" }) }, import_react.default.createElement("div", { style: { width: a10 ? r8.active ? S7 : 20 : "auto" }, className: (0, import_classnames.default)(e7 == null ? void 0 : e7.progressStepWrapper, { [e7 == null ? void 0 : e7.active]: r8.active, [e7 == null ? void 0 : e7.detailed]: o8 === "detailed", [e7 == null ? void 0 : e7.completed]: p12 < m9 || r8.completed, [e7 == null ? void 0 : e7.collapsible]: a10 }) }, import_react.default.createElement("div", { className: (0, import_classnames.default)(e7 == null ? void 0 : e7.progressStepIndex, { [e7 == null ? void 0 : e7.active]: r8.active }) }, p12 + 1, o8 === "detailed" && p12 < m9 && import_react.default.createElement(FontAwesomeIcon, { icon: faCheck, className: e7 == null ? void 0 : e7.progressStepCheck })), r8.title && o8 === "detailed" && import_react.default.createElement("div", { className: (0, import_classnames.default)(e7 == null ? void 0 : e7.progressStepTitle, { [e7 == null ? void 0 : e7.active]: r8.active, [e7 == null ? void 0 : e7.collapsible]: a10 }) }, import_react.default.createElement("div", { className: e7 == null ? void 0 : e7.progressStepTitleText }, r8.title))))));
};
var x4 = u3(u4, { ssrStyles: () => import("./progressHeaderStyles-Y4HNUEVP.js"), clientStyles: () => (_(), gt(t)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-KFU7E5WB.js
var import_dist16 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GZKWOT6B.js
var import_dist3 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-TZSUBZOG.js
var import_dist2 = __toESM(require_dist());
var import_react2 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());
var x5 = b((ur2, C5) => {
  v();
  function fe(e7, r8) {
    for (var t6 = -1, n8 = e7 == null ? 0 : e7.length, a10 = Array(n8); ++t6 < n8; ) a10[t6] = r8(e7[t6], t6, e7);
    return a10;
  }
  C5.exports = fe;
});
var E2 = b((cr, R5) => {
  v();
  var q = c2(), le = x5(), de = A(), pe = c4(), me = 1 / 0, A6 = q ? q.prototype : void 0, D5 = A6 ? A6.toString : void 0;
  function M4(e7) {
    if (typeof e7 == "string") return e7;
    if (de(e7)) return le(e7, M4) + "";
    if (pe(e7)) return D5 ? D5.call(e7) : "";
    var r8 = e7 + "";
    return r8 == "0" && 1 / e7 == -me ? "-0" : r8;
  }
  R5.exports = M4;
});
var g3 = b((fr, F) => {
  v();
  var ge = E2();
  function ve(e7) {
    return e7 == null ? "" : ge(e7);
  }
  F.exports = ve;
});
var w = b((lr, O2) => {
  v();
  function be(e7, r8, t6) {
    var n8 = -1, a10 = e7.length;
    r8 < 0 && (r8 = -r8 > a10 ? 0 : a10 + r8), t6 = t6 > a10 ? a10 : t6, t6 < 0 && (t6 += a10), a10 = r8 > t6 ? 0 : t6 - r8 >>> 0, r8 >>>= 0;
    for (var d8 = Array(a10); ++n8 < a10; ) d8[n8] = e7[n8 + r8];
    return d8;
  }
  O2.exports = be;
});
var H4 = b((dr, N3) => {
  v();
  var he = w();
  function Se(e7, r8, t6) {
    var n8 = e7.length;
    return t6 = t6 === void 0 ? n8 : t6, !r8 && t6 >= n8 ? e7 : he(e7, r8, t6);
  }
  N3.exports = Se;
});
var v3 = b((pr, U4) => {
  v();
  var ye = "\\ud800-\\udfff", Te = "\\u0300-\\u036f", Ce = "\\ufe20-\\ufe2f", xe = "\\u20d0-\\u20ff", qe = Te + Ce + xe, Ae = "\\ufe0e\\ufe0f", De = "\\u200d", Me = RegExp("[" + De + ye + qe + Ae + "]");
  function Re(e7) {
    return Me.test(e7);
  }
  U4.exports = Re;
});
var I = b((mr, k4) => {
  v();
  function Ee(e7) {
    return e7.split("");
  }
  k4.exports = Ee;
});
var Z = b((gr, L6) => {
  v();
  var W5 = "\\ud800-\\udfff", Fe = "\\u0300-\\u036f", Oe = "\\ufe20-\\ufe2f", we = "\\u20d0-\\u20ff", Ne = Fe + Oe + we, He = "\\ufe0e\\ufe0f", Ue = "[" + W5 + "]", b3 = "[" + Ne + "]", h5 = "\\ud83c[\\udffb-\\udfff]", ke = "(?:" + b3 + "|" + h5 + ")", j2 = "[^" + W5 + "]", P4 = "(?:\\ud83c[\\udde6-\\uddff]){2}", V3 = "[\\ud800-\\udbff][\\udc00-\\udfff]", Ie = "\\u200d", z4 = ke + "?", J = "[" + He + "]?", We = "(?:" + Ie + "(?:" + [j2, P4, V3].join("|") + ")" + J + z4 + ")*", je = J + z4 + We, Pe = "(?:" + [j2 + b3 + "?", b3, P4, V3, Ue].join("|") + ")", Ve = RegExp(h5 + "(?=" + h5 + ")|" + Pe + je, "g");
  function ze(e7) {
    return e7.match(Ve) || [];
  }
  L6.exports = ze;
});
var B3 = b((vr, Y4) => {
  v();
  var Je = I(), Le = v3(), Ze = Z();
  function Ye(e7) {
    return Le(e7) ? Ze(e7) : Je(e7);
  }
  Y4.exports = Ye;
});
var K = b((br, G4) => {
  v();
  var Be = H4(), Ge = v3(), Ke = B3(), Qe = g3();
  function Xe(e7) {
    return function(r8) {
      r8 = Qe(r8);
      var t6 = Ge(r8) ? Ke(r8) : void 0, n8 = t6 ? t6[0] : r8.charAt(0), a10 = t6 ? Be(t6, 1).join("") : r8.slice(1);
      return n8[e7]() + a10;
    };
  }
  G4.exports = Xe;
});
var X = b((hr, Q4) => {
  v();
  var _e = K(), $e = _e("toUpperCase");
  Q4.exports = $e;
});
var $ = b((Sr, _6) => {
  v();
  var er = g3(), rr = X();
  function or(e7) {
    return rr(er(e7).toLowerCase());
  }
  _6.exports = or;
});
v();
var S4 = ur($());
c();
u();
f4();
var Er = ({ className: e7, data: r8, onDecodeError: t6, onDecode: n8 }) => {
  let a10 = (0, S4.default)("raw".toString()), [d8, ee] = (0, import_react2.useState)({ label: a10, value: a10 }), y = Object.values(o2).map((f9) => {
    let l9 = f9.toString();
    return { label: (0, S4.default)(l9), value: l9 };
  }), re = (f9) => {
    let l9 = y.find((oe) => oe.value === f9.target.value);
    l9 && ee(l9);
  };
  return (0, import_react2.useEffect)(() => {
    let { displayValue: f9, validationWarnings: l9 } = B2({ input: r8, decodeMethod: o2[d8.value] });
    n8(f9), l9.length > 0 && t6(l9);
  }, [d8, r8]), import_react2.default.createElement("div", { className: (0, import_classnames2.default)("transaction-data-decode", e7) }, import_react2.default.createElement("select", { className: "transaction-data-decode-select", "data-testid": "transactionDataDecode", value: d8.value, onChange: re }, y.map((f9) => import_react2.default.createElement("option", { key: f9.value, value: f9.value }, f9.label))), import_react2.default.createElement(FontAwesomeIcon, { icon: faChevronDown, className: "transaction-data-decode-select-icon" }));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GZKWOT6B.js
var import_react3 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());
v();
T3();
f2();
l2();
var X2 = (p12, e7) => [...p12.matchAll(new RegExp(e7, "gi"))].map((r8) => r8.index).filter((r8) => Number.isFinite(r8));
var Y = ({ className: p12 = "dapp-transaction-data", customCopyIcon: e7, data: d8, globalStyles: r8, highlight: o8, innerTransactionDataClasses: M4, isScCall: H8, label: u9, showCopyButton: k4 = true, styles: a10, showDataDecode: F, transactionIndex: A6 }) => {
  let [i13, N3] = (0, import_react3.useState)(d8), { transactionDataInputLabelClassName: f9, transactionDataInputValueClassName: C5 } = M4 || {}, m9 = import_react3.default.createElement(import_react3.default.Fragment, null, i13), [T4, ...B7] = o8 && H8 ? o8.split("@") : [], v5 = i13 && o8, x9 = v5 ? X2(i13, o8) : [], h5 = v5 && x9.length > 0, s3 = (c16) => {
    !c16 || c16.scrollIntoView();
  }, j2 = (c16) => {
    N3(c16);
  }, q = () => {
    N3(d8);
  };
  if (h5) switch (true) {
    case i13.startsWith(o8): {
      let [, c16] = i13.split(o8);
      m9 = import_react3.default.createElement(import_react3.default.Fragment, null, import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.highlighted }, o8), import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.textMuted }, c16));
      break;
    }
    case i13.endsWith(o8): {
      let [c16] = i13.split(o8);
      m9 = import_react3.default.createElement(import_react3.default.Fragment, null, import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.textMuted }, c16), import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.highlighted, ref: s3 }, o8));
      break;
    }
    default: {
      let { start: c16, end: O2 } = x2({ occurrences: x9, transactionIndex: A6, data: i13, highlight: o8 });
      m9 = import_react3.default.createElement(import_react3.default.Fragment, null, import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.textMuted }, c16), import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.highlighted, ref: s3 }, o8), import_react3.default.createElement("span", { className: r8 == null ? void 0 : r8.textMuted }, O2));
      break;
    }
  }
  let I6 = [m(T4), ...B7].join("@");
  return import_react3.default.createElement(import_react3.default.Fragment, null, T4 && import_react3.default.createElement("div", { className: (0, import_classnames3.default)(a10 == null ? void 0 : a10.transactionData, p12) }, import_react3.default.createElement("span", { className: (0, import_classnames3.default)(a10 == null ? void 0 : a10.transactionDataLabel, f9) }, "Smart Contract Call"), import_react3.default.createElement("div", { className: a10 == null ? void 0 : a10.transactionDataValueWrapper }, import_react3.default.createElement("div", { "data-testid": "confirmScCall", className: (0, import_classnames3.default)(a10 == null ? void 0 : a10.transactionDataValue, C5) }, import_react3.default.createElement("span", { className: a10 == null ? void 0 : a10.transactionDataValueText }, I6), i13 && import_react3.default.createElement(D3, { text: I6, className: a10 == null ? void 0 : a10.transactionDataValueCopy })))), import_react3.default.createElement("div", { className: (0, import_classnames3.default)(a10 == null ? void 0 : a10.transactionData, p12) }, import_react3.default.createElement("div", { className: (0, import_classnames3.default)(a10 == null ? void 0 : a10.transactionDataLabel, f9) }, u9 != null ? u9 : "Data", F && import_react3.default.createElement(Er, { data: d8, onDecode: j2, onDecodeError: q })), import_react3.default.createElement("div", { className: a10 == null ? void 0 : a10.transactionDataValueWrapper }, import_react3.default.createElement("div", { "data-testid": "confirmData", className: (0, import_classnames3.default)(a10 == null ? void 0 : a10.transactionDataValue, C5) }, import_react3.default.createElement("span", { className: a10 == null ? void 0 : a10.transactionDataValueText }, i13 ? m9 : V), i13 && k4 && import_react3.default.createElement(D3, { copyIcon: e7, text: i13, className: a10 == null ? void 0 : a10.transactionDataValueCopy })))));
};
var ta = u3(Y, { ssrStyles: () => import("./TransactionDataStyles-TE6WKGCK.js"), clientStyles: () => (c6(), gt(r2)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-CCQ6HQYJ.js
var import_dist4 = __toESM(require_dist());
var import_react4 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());
v();
var c13 = (m9 = null, n8) => (0, import_react4.useMemo)(() => ({ formGroup: (0, import_classnames4.default)(n8 == null ? void 0 : n8.formGroup, n8 == null ? void 0 : n8.textBreak, n8 == null ? void 0 : n8.textLeft), formLabel: (0, import_classnames4.default)(n8 == null ? void 0 : n8.textBreak, n8 == null ? void 0 : n8.textSecondary), icon: n8 == null ? void 0 : n8.textWhite, contentWrapper: (0, import_classnames4.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.flexColumn, n8 == null ? void 0 : n8.justifyContentStart, n8 == null ? void 0 : n8.flexRow, n8 == null ? void 0 : n8.justifyContentBetween, n8 == null ? void 0 : n8.mb3), tokenWrapper: (0, import_classnames4.default)(n8 == null ? void 0 : n8.mb3, n8 == null ? void 0 : n8.mb0, n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.flexColumn, n8 == null ? void 0 : n8.alignItemsStart), tokenLabel: (0, import_classnames4.default)(n8 == null ? void 0 : n8.textSecondary, n8 == null ? void 0 : n8.textLeft), tokenValue: (0, import_classnames4.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.alignItemsCenter), scamReport: n8 == null ? void 0 : n8.textWarning, scamReportIcon: (0, import_classnames4.default)(n8 == null ? void 0 : n8.textWarning, n8 == null ? void 0 : n8.mr1), tokenAmountLabel: (0, import_classnames4.default)(n8 == null ? void 0 : n8.textSecondary, n8 == null ? void 0 : n8.textLeft), tokenAmountValue: (0, import_classnames4.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.alignItemsCenter), dataFormGroup: (0, import_classnames4.default)(n8 == null ? void 0 : n8.formGroup, n8 == null ? void 0 : n8.textLeft), errorMessage: (0, import_classnames4.default)(n8 == null ? void 0 : n8.textDanger, n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.justifyContentCenter, n8 == null ? void 0 : n8.alignItemsCenter), buttonsWrapper: (0, import_classnames4.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.alignItemsCenter, n8 == null ? void 0 : n8.justifyContentEnd, n8 == null ? void 0 : n8.mt1), cancelButton: (0, import_classnames4.default)(n8 == null ? void 0 : n8.btn, n8 == null ? void 0 : n8.btnDark, n8 == null ? void 0 : n8.textWhite, n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.mr2), signButton: (0, import_classnames4.default)(n8 == null ? void 0 : n8.btn, m9 ? n8 == null ? void 0 : n8.btnWarning : n8 == null ? void 0 : n8.btnPrimary, n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.ml2) }), [m9, n8]);

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-KBXE4SBJ.js
var import_dist8 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-UGGP5MV5.js
var import_dist5 = __toESM(require_dist());
var import_react5 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());
v();
var f5 = ({ className: p12, styles: o8 }) => import_react5.default.createElement("div", { className: (0, import_classnames5.default)(o8 == null ? void 0 : o8.loadingDots, p12) }, Array.from({ length: 3 }).map((h5, i13) => import_react5.default.createElement("span", { key: `loading-dot-${i13}`, className: (0, import_classnames5.default)(o8 == null ? void 0 : o8.loadingDot, o8 == null ? void 0 : o8[`loadingDot-${i13}`]) })), import_react5.default.createElement("span", null, "Loading..."));
var C = u3(f5, { ssrStyles: () => import("./loadingDotsStyle-5TOGX6PK.js"), clientStyles: () => (l3(), gt(d4)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-4OLSDXSV.js
var import_dist7 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-QE75EXZS.js
var import_dist6 = __toESM(require_dist());
var L3 = __toESM(require_react());
v();
var e5 = (o8) => L3.createElement("svg", yt({ width: 200, height: 200, viewBox: "5 5 10.55 21", fill: "#23f7dd", xmlns: "http://www.w3.org/2000/svg", className: "herotag-logo" }, o8), L3.createElement("g", null, L3.createElement("path", { d: "M11.3288 15.0673L20.4563 10.168L18.9218 7.20471L10.5638 10.6011C10.3486 10.6887 10.11 10.6887 9.89482 10.6011L1.53452 7.20708L0 10.168L9.12756 15.0673L0 19.9666L1.53452 22.9299L9.89248 19.5335C10.1077 19.4459 10.3463 19.4459 10.5615 19.5335L18.9195 22.9299L20.454 19.9666L11.3264 15.0673H11.3288Z" })));
var h3 = e5;

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-4OLSDXSV.js
var import_react6 = __toESM(require_react());
var import_classnames6 = __toESM(require_classnames());
v();
var M = ({ amount: u9, displayAsUsd: c16, addEqualSign: f9, egldIcon: B7, className: S7, showTokenLabel: x9 = true, styles: a10, tokenLabel: g7, showTokenLabelSup: T4, "data-testid": h5 }) => {
  let [i13, r8] = u9.split("."), p12 = c16 && i13.indexOf("$") < 0 ? `$${i13}` : i13, n8 = (() => {
    let o8 = { processedMainBalance: p12 };
    return f9 && c16 && (o8.approximation = "≈"), r8 && (o8.decimalBalance = `.${r8}`), !c16 && x9 && (o8.tokenLabel = ` ${g7}`), o8;
  })(), k4 = [n8.approximation, n8.processedMainBalance, n8.decimalBalance, n8.tokenLabel].reduce((o8, m9) => m9 ? o8.concat(m9) : o8, "");
  return import_react6.default.createElement("div", { className: (0, import_classnames6.default)(a10 == null ? void 0 : a10.balance, S7), "data-testid": h5, "data-value": k4 }, B7 && !c16 && import_react6.default.createElement(h3, { className: a10 == null ? void 0 : a10.balanceSymbol }), n8.approximation && import_react6.default.createElement("span", { className: a10 == null ? void 0 : a10.balanceApproximation }, n8.approximation), n8.processedMainBalance && import_react6.default.createElement("span", { className: a10 == null ? void 0 : a10.balanceMain }, p12), n8.decimalBalance && import_react6.default.createElement("span", { className: a10 == null ? void 0 : a10.balanceDecimals }, n8.decimalBalance), n8.tokenLabel && import_react6.default.createElement("sup", { className: (0, import_classnames6.default)(a10 == null ? void 0 : a10.balanceSuffix, { [a10 == null ? void 0 : a10.balanceSuffixSup]: T4 }) }, n8.tokenLabel));
};
var V2 = u3(M, { ssrStyles: () => import("./balanceStyles-HNVIN5GA.js"), clientStyles: () => (p4(), gt(l4)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-KBXE4SBJ.js
var import_react7 = __toESM(require_react());
v();
T3();
h();
var N = ({ transaction: e7, styles: a10 }) => {
  let { price: o8 } = h2(), D5 = n(), n8 = U({ gasPerDataByte: String(L), gasPriceModifier: String(R2), gasLimit: e7.getGasLimit().valueOf().toString(), gasPrice: e7.getGasPrice().valueOf().toString(), data: e7.getData().toString(), chainId: e7.getChainID().valueOf() }), P4 = H({ input: n8, showLastNonZeroDecimal: true }), m9 = o8 ? L2({ feeLimit: n8, egldPriceInUsd: o8, hideEqualSign: true }) : null;
  return import_react7.default.createElement("div", { className: a10 == null ? void 0 : a10.confirmFee }, import_react7.default.createElement("div", { className: a10 == null ? void 0 : a10.confirmFeeLabel }, "Transaction Fee"), import_react7.default.createElement("div", { className: a10 == null ? void 0 : a10.confirmFeeData }, import_react7.default.createElement(V2, { className: a10 == null ? void 0 : a10.confirmFeeDataBalance, "data-testid": "confirmFee", egldIcon: true, showTokenLabel: true, showTokenLabelSup: true, tokenLabel: D5, amount: P4 }), m9 ? import_react7.default.createElement("span", { className: a10 == null ? void 0 : a10.confirmFeeDataPriceWrapper }, "(", import_react7.default.createElement(V2, { amount: m9, displayAsUsd: true, addEqualSign: true, className: a10 == null ? void 0 : a10.confirmFeeDataPrice }), ")") : import_react7.default.createElement("span", { className: a10 == null ? void 0 : a10.confirmFeeDataPriceWrapper }, import_react7.default.createElement(C, null))));
};
var M2 = u3(N, { ssrStyles: () => import("./confirmFeeStyles-LNN3TCDE.js"), clientStyles: () => (_2(), gt(p3)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-6X27JMAV.js
var import_dist9 = __toESM(require_dist());
var import_react8 = __toESM(require_react());
v();
T3();
var G3 = ({ amount: L6, label: n8, receiver: i13, customExplorerIcon: D5, receiverUsername: a10, customCopyIcon: E3, scamReport: v5, styles: r8 }) => {
  let c16 = H2(i13), A6 = Boolean(c16 || a10), h5 = new bignumber_default(L6).isZero(), { data: p12, isLoading: P4, error: B7 } = A2(A6 ? null : i13), m9 = a10 != null ? a10 : p12 == null ? void 0 : p12.username, W5 = m9 != null ? m9 : i13, b3 = Boolean(i13 && Boolean(m9) && !B7), w4 = h5 ? "To interact with" : "To";
  return import_react8.default.createElement("div", { className: r8 == null ? void 0 : r8.receiver }, import_react8.default.createElement("div", { className: r8 == null ? void 0 : r8.receiverLabelWrapper }, import_react8.default.createElement("div", { className: r8 == null ? void 0 : r8.receiverLabel }, n8 != null ? n8 : w4), v5 && import_react8.default.createElement("div", { className: r8 == null ? void 0 : r8.receiverLabelScam }, import_react8.default.createElement("span", { className: r8 == null ? void 0 : r8.receiverLabelScamText, "data-testid": "confirmScamReport" }, v5), import_react8.default.createElement(FontAwesomeIcon, { icon: faExclamationTriangle, className: r8 == null ? void 0 : r8.receiverLabelScamIcon }))), P4 ? import_react8.default.createElement("div", { className: r8 == null ? void 0 : r8.receiverWrapper }, import_react8.default.createElement(C, { className: r8 == null ? void 0 : r8.receiverLoading })) : import_react8.default.createElement("div", { className: r8 == null ? void 0 : r8.receiverWrapper, "data-testid": "confirmReceiver" }, import_react8.default.createElement(G2, { text: i13, className: r8 == null ? void 0 : r8.receiverTrim }), b3 && !c16 && import_react8.default.createElement("span", { className: r8 == null ? void 0 : r8.receiverData }, "(", import_react8.default.createElement(h3, { className: r8 == null ? void 0 : r8.receiverDataIcon }), import_react8.default.createElement("span", { className: r8 == null ? void 0 : r8.receiverDataUsername }, e(W5)), ")"), c16 && import_react8.default.createElement("span", { className: r8 == null ? void 0 : r8.receiverData }, "(", import_react8.default.createElement("span", { className: r8 == null ? void 0 : r8.receiverDataUsername }, "Smart Contract"), ")"), import_react8.default.createElement(D3, { text: i13, className: r8 == null ? void 0 : r8.receiverCopy, copyIcon: E3 }), import_react8.default.createElement(H3, { page: `/${T}/${i13}`, className: r8 == null ? void 0 : r8.receiverExternal, customExplorerIcon: D5 })));
};
var ar2 = u3(G3, { ssrStyles: () => import("./confirmReceiverStyles-6PHTGBYT.js"), clientStyles: () => (_3(), gt(i3)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-BAGDVYBH.js
var import_dist15 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-PMD6O3X7.js
var import_dist10 = __toESM(require_dist());
var import_react9 = __toESM(require_react());
var import_classnames7 = __toESM(require_classnames());
v();
T3();
f();
a2();
i();
var M3 = ({ styles: o8, amount: v5, type: a10, tokenDetails: A6 }) => {
  let { network: T4 } = p2(), { identifier: t6, tokenAvatar: p12, name: k4 } = A6, C5 = "SemiFungibleESDT" === a10, m9 = Array(Math.min(4, Number(v5))).fill(null);
  return import_react9.default.createElement("div", { onClick: (f9) => {
    var c16;
    if (!t6) return;
    let n8 = g({ explorerAddress: T4.explorerAddress, to: R3.nftDetails(t6) });
    f9.preventDefault(), f9.stopPropagation(), (c16 = import_browserConstants.safeWindow) != null && c16.open && import_browserConstants.safeWindow.open(n8);
  }, className: o8 == null ? void 0 : o8.confirmAmountNftSft }, import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftWrapper }, p12 ? import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftIconWrapper }, m9.map((f9, n8) => import_react9.default.createElement("img", { src: p12, alt: a10, key: `nft-sft-avatar-${n8}`, style: { opacity: 1 - 0.25 * n8, zIndex: m9.length - n8, marginLeft: (m9.length - n8 - 1) * 4 }, className: (0, import_classnames7.default)(o8 == null ? void 0 : o8.confirmAmountNftSftIcon, { [o8 == null ? void 0 : o8.confirmAmountNftSftIconRelative]: n8 === 0 }) }))) : import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftIconWrapper }, import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftIconText }, C5 ? "SFT" : "NFT")), import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftContent }, import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftName, "data-testid": "nftLabel" }, k4), import_react9.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountNftSftTicker, "data-testid": "nftIdentifier" }, t6))), import_react9.default.createElement(FontAwesomeIcon, { icon: faArrowUpRightFromSquare, className: o8 == null ? void 0 : o8.confirmAmountNftSftIcon }));
};
var R4 = u3(M3, { ssrStyles: () => import("./confirmAmountNftSftStyles-HECLSCEN.js"), clientStyles: () => (c7(), gt(e2)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-O4TGTJQT.js
var import_dist11 = __toESM(require_dist());
var import_react10 = __toESM(require_react());
v();
var z2 = () => {
  let [o8, r8] = (0, import_react10.useState)(true), d8 = (e7) => e7.getBoundingClientRect().width, l9 = (e7) => parseInt(getComputedStyle(e7).getPropertyValue("font-size"));
  return { isFontSizeLoading: o8, handleAmountReference: (e7) => {
    if (!e7) return;
    let t6 = e7.firstChild, n8 = { parent: e7.offsetWidth, firstChild: l9(t6) };
    if (!!t6) {
      for (; n8.parent < d8(t6); ) {
        let i13 = n8.firstChild - 0.1, a10 = { fontSize: `${i13}px` }, c16 = { firstChild: i13 };
        Object.assign(t6.style, a10), Object.assign(n8, c16);
      }
      r8(false);
    }
  } };
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-PXSD7VRA.js
var import_dist13 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-BV7C4GYQ.js
var import_dist12 = __toESM(require_dist());
var import_react11 = __toESM(require_react());
var import_classnames8 = __toESM(require_classnames());
v();
T3();
l();
var Z2 = ($3) => {
  var n8 = $3, { amount: p12, usd: f9, decimals: T4, addEqualSign: t6, className: e7, globalStyles: r8 } = n8, c16 = Et(n8, ["amount", "usd", "decimals", "addEqualSign", "className", "globalStyles"]);
  let V3 = d({ amount: p12, usd: f9, decimals: T4, addEqualSign: t6 != null ? t6 : true }), h5 = `${p12}` === u2 ? `= $${u2}` : V3;
  return import_react11.default.createElement("small", yt({ className: (0, import_classnames8.default)(r8 == null ? void 0 : r8.formText, r8 == null ? void 0 : r8.textSecondary, r8 == null ? void 0 : r8.mt0, e7 != null ? e7 : "dapp-usd-value") }, c16), h5);
};
var B4 = u3(Z2, {});

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-PXSD7VRA.js
var import_react12 = __toESM(require_react());
var import_classnames9 = __toESM(require_classnames());
v();
T3();
var B5 = ({ isEgld: m9, styles: o8, tokenPrice: r8, isNftOrSft: e7, handleReference: v5, currentTransaction: g7, amount: I6, tokenDetails: c16 }) => {
  let { network: i13 } = p2(), { tokenAvatar: t6, tokenDecimals: b3, identifier: k4 } = c16, f9 = ({ addCommas: w4 }) => H({ input: m9 ? g7.transaction.getValue().toString() : I6, decimals: m9 ? Number(i13.decimals) : b3, digits: Number(i13.digits), showLastNonZeroDecimal: false, addCommas: w4 }), a10 = m9 || c16.identifier === k, C5 = f9({ addCommas: true }), L6 = f9({ addCommas: false });
  return import_react12.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountData }, import_react12.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountDataWrapper }, !a10 && t6 && import_react12.default.createElement("img", { src: t6, className: o8 == null ? void 0 : o8.confirmAmountDataIcon }), !a10 && !t6 && import_react12.default.createElement("div", { className: (0, import_classnames9.default)(o8 == null ? void 0 : o8.confirmAmountDataIcon, o8 == null ? void 0 : o8.confirmAmountDataIconDefault) }, import_react12.default.createElement(FontAwesomeIcon, { icon: faCoins, className: o8 == null ? void 0 : o8.confirmAmountDataIconDefaultIcon })), import_react12.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountDataBalanceWrapper, ref: v5 }, import_react12.default.createElement(V2, { amount: C5, egldIcon: a10, "data-testid": "confirmAmount", showTokenLabel: true, showTokenLabelSup: true, tokenLabel: a10 ? i13.egldLabel : k4, className: o8 == null ? void 0 : o8.confirmAmountDataBalance }))), !e7 && r8 && import_react12.default.createElement(B4, { amount: L6, usd: r8, "data-testid": "confirmUsdValue", className: o8 == null ? void 0 : o8.confirmAmountDataPrice }), !e7 && !r8 && import_react12.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountDataPrice }, "Price Unknown"));
};
var Y2 = u3(B5, { ssrStyles: () => import("./confirmAmountDataStyles-7F6WNZMN.js"), clientStyles: () => (e3(), gt(c9)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-LL2OAG62.js
var import_dist14 = __toESM(require_dist());
var import_react13 = __toESM(require_react());
v();
T3();
a2();
var A3 = ({ amount: e7, styles: n8, type: m9, identifier: t6 }) => {
  let i13 = new bignumber_default(e7), f9 = i13.isZero(), p12 = i13.isEqualTo(1) ? "SFT" : "SFTs", r8 = i13.toNumber().toLocaleString("en"), c16 = `${r8} ${t6}`;
  return f9 ? import_react13.default.createElement("div", { className: n8 == null ? void 0 : n8.confirmAmountLabel }, "You are using") : m9 === "NonFungibleESDT" ? import_react13.default.createElement("div", { className: n8 == null ? void 0 : n8.confirmAmountLabel }, "You are sending an NFT") : m9 === "SemiFungibleESDT" ? import_react13.default.createElement("div", { className: n8 == null ? void 0 : n8.confirmAmountLabel }, import_react13.default.createElement("span", { className: n8 == null ? void 0 : n8.confirmAmountLabelText }, "You are sending"), import_react13.default.createElement("span", { className: n8 == null ? void 0 : n8.confirmAmountLabelValue, "data-testid": "confirmAmount", "data-value": c16 }, r8, " ", p12)) : import_react13.default.createElement("div", { className: n8 == null ? void 0 : n8.confirmAmountLabel }, "You are sending");
};
var I2 = u3(A3, { ssrStyles: () => import("./confirmAmountLabelStyles-UG65PRQY.js"), clientStyles: () => (c10(), gt(a4)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-BAGDVYBH.js
var import_react14 = __toESM(require_react());
var import_classnames10 = __toESM(require_classnames());
v();
a2();
var H5 = ({ styles: o8, currentTransaction: c16 }) => {
  let { tokenId: r8, nonce: m9, amount: e7 } = c16.transactionTokenInfo, { isFontSizeLoading: d8, handleAmountReference: L6 } = z2(), P4 = m9 && m9.length > 0 ? `${r8}-${m9}` : r8, t6 = S3({ tokenId: P4 }), { price: h5 } = h2(), { type: i13, esdtPrice: E3, isLoading: f9, identifier: I6 } = t6, p12 = !r8, b3 = p12 ? h5 : E3, u9 = i13 ? ["SemiFungibleESDT", "NonFungibleESDT"].includes(i13) : false;
  return import_react14.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmount }, import_react14.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountLabel }, f9 ? import_react14.default.createElement(C, null) : import_react14.default.createElement(I2, { amount: e7, type: i13, identifier: I6 })), import_react14.default.createElement("div", { className: o8 == null ? void 0 : o8.confirmAmountWrapper }, import_react14.default.createElement(C, { className: (0, import_classnames10.default)(o8 == null ? void 0 : o8.confirmAmountLoading, { [o8 == null ? void 0 : o8.confirmAmountLoadingVisible]: f9 || d8 }) }), import_react14.default.createElement("div", { className: (0, import_classnames10.default)(o8 == null ? void 0 : o8.confirmAmountContent, { [o8 == null ? void 0 : o8.confirmAmountContentHidden]: f9 || d8 }) }, u9 ? import_react14.default.createElement(R4, { amount: e7, type: i13, tokenDetails: t6 }) : import_react14.default.createElement(Y2, { isNftOrSft: u9, isEgld: p12, amount: e7, handleReference: L6, currentTransaction: c16, tokenDetails: t6, tokenPrice: b3 }))));
};
var Q3 = u3(H5, { ssrStyles: () => import("./confirmAmountStyles-AFDGITM7.js"), clientStyles: () => (p5(), gt(c8)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-KFU7E5WB.js
var import_react15 = __toESM(require_react());
var import_out = __toESM(require_out());
var import_classnames11 = __toESM(require_classnames());
v();
var k3 = ({ currentTransaction: e7, error: s3, signStepInnerClasses: S7, globalStyles: C5, styles: t6 }) => {
  if (!e7) return null;
  let { inputGroupClassName: d8, inputLabelClassName: N3, inputValueClassName: f9, errorClassName: T4 } = S7 || {}, { tokenId: v5, multiTxData: n8, receiver: I6, amount: y } = e7.transactionTokenInfo, b3 = n8 ? new import_out.Address(I6).bech32() : e7.transaction.getReceiver().toString(), r8 = e7.receiverScamInfo, h5 = c13(r8, C5), i13 = e7.transaction.getData().toString();
  return import_react15.default.createElement("div", { className: t6 == null ? void 0 : t6.summary }, import_react15.default.createElement("div", { className: t6 == null ? void 0 : t6.fields }, import_react15.default.createElement(Q3, { currentTransaction: e7 }), import_react15.default.createElement(ar2, { scamReport: r8, receiver: b3, amount: y }), import_react15.default.createElement(M2, { transaction: e7.transaction }), i13 && import_react15.default.createElement(ta, { className: d8, data: i13, highlight: n8, innerTransactionDataClasses: { transactionDataInputLabelClassName: N3, transactionDataInputValueClassName: f9 }, isScCall: !v5, showDataDecode: true, transactionIndex: e7.transactionIndex }), s3 && import_react15.default.createElement("p", { className: (0, import_classnames11.default)(h5.errorMessage, T4) }, s3)));
};
var H6 = u3(k3, { ssrStyles: () => import("./signStepBodyStyles-3YCYE5OW.js"), clientStyles: () => (s2(), gt(d3)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-AGOLXGE6.js
var import_react16 = __toESM(require_react());
var import_classnames12 = __toESM(require_classnames());
v();
T3();
var pn = (C5) => {
  var I6;
  let { allTransactions: r8, className: M4, currentStep: e7, currentTransaction: i13, GuardianScreen: s3, error: W5, globalStyles: p12, handleClose: $3, handleSubmit: b3, isLastTransaction: A6, onPrev: O2, onSignTransaction: j2, signStepInnerClasses: N3, styles: n8, title: V3, waitingForDevice: m9 } = C5, [g7, h5] = (0, import_react16.useState)(false), [S7, _6] = (0, import_react16.useState)({});
  if (!i13) return null;
  let c16 = `${i13.transaction.getNonce().valueOf().toString()}_${i13.transactionTokenInfo.multiTxData}_${i13.transactionIndex}`;
  (0, import_react16.useEffect)(() => {
    let T4 = Object.keys(S7).includes(c16), tn = Object.values(S7).includes(e7);
    T4 || tn || _6((en) => xt(yt({}, en), { [c16]: e7 }));
  }, [c16, e7]);
  let q = i13.transaction.getData().toString(), { buttonsWrapperClassName: z4, buttonClassName: B7 } = N3 || {}, { type: J, multiTxData: P4 } = i13.transactionTokenInfo, K2 = e7 === 0, k4 = (T4) => {
    T4.preventDefault(), K2 ? $3() : O2();
  }, l9 = A6 && !m9, Q4 = () => Bt(void 0, null, function* () {
    if (yield j2(), l9 && s3) return h5(true);
    l9 && b3 && b3();
  }), U4 = J && P4 && !q.endsWith(P4), o8 = "Sign & Continue";
  o8 = m9 ? "Check your Ledger" : o8, o8 = l9 ? "Sign & Submit" : o8, o8 = U4 ? "Continue" : o8;
  let d8 = { currentTransaction: i13, error: W5, allTransactions: r8, currentStep: e7, isGuarded: Boolean(s3), signStepInnerClasses: N3 }, y = () => {
    h5(false);
  }, X3 = r8.length > 1 ? "Sign Transactions" : "Sign Transaction", Y4 = r8.length > 1 ? "Confirm Transactions" : "Confirm Transaction", Z3 = r8.length > 1 ? `Signing Transaction ${e7 + 1} of ${r8.length}` : V3 || "Sign Transaction", f9 = s3 && g7, R5 = f9 ? "Verify Guardian" : Z3, nn = [{ title: X3, active: !g7 }, { title: Y4, active: g7, hidden: !d8.isGuarded }], D5 = S7[c16] === e7;
  return import_react16.default.createElement("div", { className: (0, import_classnames12.default)(n8 == null ? void 0 : n8.modalLayoutContent, n8 == null ? void 0 : n8.spaced, M4, { [(I6 = n8 == null ? void 0 : n8.guarded) != null ? I6 : ""]: d8.isGuarded }) }, f9 && import_react16.default.createElement("div", { onClick: y, className: (0, import_classnames12.default)(n8 == null ? void 0 : n8.modalLayoutHeadingIcon, n8 == null ? void 0 : n8.back) }, import_react16.default.createElement(FontAwesomeIcon, { icon: faArrowLeft })), import_react16.default.createElement("div", { onClick: k4, className: (0, import_classnames12.default)(n8 == null ? void 0 : n8.modalLayoutHeadingIcon, n8 == null ? void 0 : n8.close) }, import_react16.default.createElement(FontAwesomeIcon, { icon: faTimes })), d8.isGuarded && import_react16.default.createElement(x4, { steps: nn, type: "detailed", size: "small" }), import_react16.default.createElement("div", { className: n8 == null ? void 0 : n8.title, "data-testid": "signStepTitle" }, R5 || "Confirm on Ledger"), f9 ? import_react16.default.createElement(s3, xt(yt({}, C5), { onPrev: y, guardianFormDescription: "Enter the code from your Authenticator app to verify this transaction." })) : import_react16.default.createElement(import_react16.default.Fragment, null, import_react16.default.createElement(H6, yt({}, d8)), import_react16.default.createElement("div", { className: (0, import_classnames12.default)(n8 == null ? void 0 : n8.signButtons, z4) }, import_react16.default.createElement("button", { id: "closeButton", "data-testid": "closeButton", onClick: k4, className: (0, import_classnames12.default)(n8 == null ? void 0 : n8.signButtonCancel, B7) }, e7 === 0 ? "Cancel" : "Back"), import_react16.default.createElement("button", { type: "button", className: (0, import_classnames12.default)(p12 == null ? void 0 : p12.btnPrimary, n8 == null ? void 0 : n8.signButtonSubmit, B7), id: "signBtn", "data-testid": "signBtn", onClick: Q4, disabled: m9 || !D5 }, D5 ? o8 : "Loading..."))));
};
var wn = u3(pn, { ssrStyles: () => import("./signWithDeviceModalStyles-AX7RMJWI.js"), clientStyles: () => (c5(), gt(a3)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-W3PQIZIG.js
var import_react17 = __toESM(require_react());
var import_classnames13 = __toESM(require_classnames());
v();
var z3 = ({ handleClose: o8, handleSubmit: v5, error: C5, className: h5 = "dapp-device-modal", verifyReceiverScam: S7 = true, GuardianScreen: a10, title: w4 = "Confirm transaction", signStepInnerClasses: D5, globalStyles: n8, styles: r8 }) => {
  let { address: M4 } = s(), { onSignTransaction: W5, onPrev: g7, allTransactions: B7, waitingForDevice: L6, onAbort: P4, isLastTransaction: I6, signedTransactions: N3, setSignedTransactions: k4, currentStep: A6, callbackRoute: F, currentTransaction: t6 } = In({ onCancel: o8, verifyReceiverScam: S7, hasGuardianScreen: Boolean(a10) }), G4 = t6 == null, e7 = { wrapper: (0, import_classnames13.default)(r8 == null ? void 0 : r8.modalContainer, r8 == null ? void 0 : r8.walletConnect, h5), container: (0, import_classnames13.default)(n8 == null ? void 0 : n8.card, n8 == null ? void 0 : n8.container), cardBody: n8 == null ? void 0 : n8.cardBody };
  return import_react17.default.createElement(g2, { onClose: o8, modalConfig: { modalDialogClassName: e7.wrapper }, visible: true }, import_react17.default.createElement("div", { className: e7.cardBody }, G4 ? import_react17.default.createElement(W, null) : import_react17.default.createElement(wn, { address: M4, allTransactions: B7, callbackRoute: F, currentStep: A6, currentTransaction: t6, error: C5, GuardianScreen: a10, handleClose: P4, handleSubmit: v5, isLastTransaction: I6, onPrev: g7, onSignTransaction: W5, setSignedTransactions: k4, signStepInnerClasses: D5, signedTransactions: N3, title: w4, waitingForDevice: L6 })));
};
var _4 = u3(z3, { ssrStyles: () => import("./signWithDeviceModalStyles-AX7RMJWI.js"), clientStyles: () => (c5(), gt(a3)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IIIKKJQZ.js
var import_react18 = __toESM(require_react());
v();
var d6 = (o8) => import_react18.default.createElement(_4, xt(yt({}, o8), { title: o8.title || "Confirm on Metamask" }));

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-ODRGRF5E.js
var import_dist20 = __toESM(require_dist());
var import_react19 = __toESM(require_react());
var import_classnames14 = __toESM(require_classnames());
v();
T3();
var w2 = ({ handleClose: t6, error: r8, transactions: m9, sessionId: f9, className: W5 = "dapp-opera-modal", modalContentClassName: h5, globalStyles: n8, styles: i13 }) => {
  let T4 = S2(), o8 = { wrapper: (0, import_classnames14.default)(i13 == null ? void 0 : i13.modalContainer, i13 == null ? void 0 : i13.opera, W5), icon: n8 == null ? void 0 : n8.textWhite, closeBtn: (0, import_classnames14.default)(n8 == null ? void 0 : n8.btn, n8 == null ? void 0 : n8.btnCloseLink, n8 == null ? void 0 : n8.btnDark, n8 == null ? void 0 : n8.textWhite, n8 == null ? void 0 : n8.mt2) }, M4 = r8 || (m9 && m9.length > 1 ? "Check your Opera Crypto Wallet to sign the transactions" : "Check your Opera Crypto Wallet to sign the transaction"), k4 = (B7) => {
    B7.preventDefault(), t6(), T4(f9);
  };
  return import_react19.default.createElement(g2, { onClose: t6, modalConfig: { modalDialogClassName: o8.wrapper }, visible: true }, import_react19.default.createElement(G, { icon: r8 ? faTimes : null, iconClass: o8.icon, className: h5, iconBgClass: r8 ? n8 == null ? void 0 : n8.bgDanger : n8 == null ? void 0 : n8.bgWarning, iconSize: "3x", title: "Confirm on Opera Crypto Wallet", description: M4, action: import_react19.default.createElement("button", { id: "closeButton", "data-testid": "closeButton", onClick: k4, className: o8.closeBtn }, "Close") }));
};
var U2 = u3(w2, { ssrStyles: () => import("./signWithOperaModalStyles-7YO2XBHY.js"), clientStyles: () => (i4(), gt(p6)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-3NZLM666.js
var import_dist23 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IAUBQAOK.js
var import_dist22 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-VC5UFAGJ.js
var import_dist21 = __toESM(require_dist());
v();
u();
function p9() {
  let { provider: o8 } = v2();
  return () => Bt(this, null, function* () {
    if (!!o8 && d2("crossWindow")) {
      let r8 = o8;
      yield r8.cancelAction(), yield r8.dispose();
    }
  });
}

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IAUBQAOK.js
var import_react20 = __toESM(require_react());
var import_classnames15 = __toESM(require_classnames());
v();
T3();
var I3 = ({ handleClose: t6, error: c16, title: W5, description: T4, sessionId: M4, className: x9 = "dapp-extension-modal", modalContentClassName: h5, globalStyles: n8, styles: i13 }) => {
  let s3 = p9(), w4 = S2(), r8 = { wrapper: (0, import_classnames15.default)(i13 == null ? void 0 : i13.modalContainer, i13 == null ? void 0 : i13.extension, x9), icon: n8 == null ? void 0 : n8.textWhite, closeBtn: (0, import_classnames15.default)(n8 == null ? void 0 : n8.btn, n8 == null ? void 0 : n8.btnCloseLink, n8 == null ? void 0 : n8.btnDark, n8 == null ? void 0 : n8.textWhite, n8 == null ? void 0 : n8.mt2) }, B7 = (D5) => Bt(void 0, null, function* () {
    D5.preventDefault(), w4(M4), yield s3(), t6();
  });
  return import_react20.default.createElement(g2, { onClose: t6, modalConfig: { modalDialogClassName: r8.wrapper }, visible: true }, import_react20.default.createElement(G, { icon: c16 ? faTimes : null, iconClass: r8.icon, className: h5, iconBgClass: c16 ? n8 == null ? void 0 : n8.bgDanger : n8 == null ? void 0 : n8.bgWarning, iconSize: "3x", title: W5, description: T4, action: import_react20.default.createElement("button", { id: "closeButton", "data-testid": "closeButton", onClick: B7, className: r8.closeBtn }, "Close") }));
};
var Y3 = u3(I3, { ssrStyles: () => import("./signWaitingScreenModal.styles-L57HEC4T.js"), clientStyles: () => (c11(), gt(i5)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-3NZLM666.js
var import_react21 = __toESM(require_react());
v();
var P = (i13) => {
  var r8;
  let s3 = i13.error ? i13.error : ((r8 = i13.transactions) == null ? void 0 : r8.length) > 1 ? "Please signin with your passkey in order to sign the transactions" : "Please signin with your passkey in order to sign the transaction", a10 = xt(yt({}, i13), { description: s3, title: "Confirm by signing in with passkey" });
  return import_react21.default.createElement(Y3, yt({}, a10));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-SSJJJRCG.js
var import_dist28 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-7UDRJO6P.js
var import_dist26 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-Q3JUCJJU.js
var import_dist24 = __toESM(require_dist());
var import_react22 = __toESM(require_react());
var import_classnames16 = __toESM(require_classnames());
v();
var c14 = ({ globalStyles: n8 }) => import_react22.default.createElement("div", { className: (0, import_classnames16.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.flexColumn, n8 == null ? void 0 : n8.alignItemsCenter, n8 == null ? void 0 : n8.mt2) }, import_react22.default.createElement("small", { className: n8 == null ? void 0 : n8.textSecondary }, "Make sure that the phone is unlocked and the app is opened."), import_react22.default.createElement("small", null, "Hint:", " ", import_react22.default.createElement("span", { className: n8 == null ? void 0 : n8.textSecondary }, "Battery saving mode might have an effect on the connection quality.")));
var u6 = u3(c14, {});

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-FACXGHX4.js
var import_dist25 = __toESM(require_dist());
var import_react23 = __toESM(require_react());
var import_classnames17 = __toESM(require_classnames());
v();
var I4 = ({ icon: m9, iconClassName: t6, description: C5, details: e7, className: o8, globalStyles: n8 }) => {
  let d8 = (0, import_classnames17.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.flexColumn, n8 == null ? void 0 : n8.alignItemsCenter, n8 == null ? void 0 : n8.justifyContentCenter, n8 == null ? void 0 : n8.my3, o8), f9 = (0, import_classnames17.default)(n8 == null ? void 0 : n8.dFlex, n8 == null ? void 0 : n8.alignItemsCenter, n8 == null ? void 0 : n8.mr2);
  return import_react23.default.createElement("div", { className: d8 }, import_react23.default.createElement("div", { className: f9 }, m9 && import_react23.default.createElement(FontAwesomeIcon, { icon: m9, className: (0, import_classnames17.default)(n8 == null ? void 0 : n8.mr2, t6) }), C5), e7);
};
var P2 = u3(I4, {});

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-7UDRJO6P.js
var import_react24 = __toESM(require_react());
var import_classnames18 = __toESM(require_classnames());
v();
Q();
var a9 = 1e4;
var O = ((i13) => (i13.pending = "pending", i13.waiting = "waiting", i13.success = "success", i13.error = "error", i13))(O || {});
var U3 = ({ description: f9, className: r8, globalStyles: n8 }) => {
  let { provider: e7 } = v2(), i13 = z(e7), [P4, s3] = (0, import_react24.useState)("pending"), [k4, u9] = (0, import_react24.useState)(a9), D5 = i13 === "walletconnectv2", d8 = () => Bt(void 0, null, function* () {
    var h5;
    let m9 = Symbol();
    try {
      (yield c3((h5 = e7 == null ? void 0 : e7.ping) == null ? void 0 : h5.call(e7), a9, m9)) ? (s3("success"), u9((A6) => A6 * 1.5)) : (s3("error"), u9(a9));
    } catch (W5) {
      s3(W5 === m9 ? "waiting" : "error"), u9(a9);
    }
  });
  if ((0, import_react24.useEffect)(() => {
    d8();
    let m9 = setInterval(() => Bt(void 0, null, function* () {
      yield d8();
    }), k4);
    return () => clearInterval(m9);
  }, []), !D5) return null;
  switch (P4) {
    case "pending":
      return import_react24.default.createElement(P2, { className: r8, icon: faCircleNotch, iconClassName: (0, import_classnames18.default)(n8 == null ? void 0 : n8.textPrimary, "fa-spin", "slow-spin"), description: "Checking the connection...", details: import_react24.default.createElement("div", { className: (0, import_classnames18.default)(n8 == null ? void 0 : n8.mt3) }, f9) });
    case "waiting":
      return import_react24.default.createElement(P2, { className: r8, icon: faCircleNotch, iconClassName: (0, import_classnames18.default)(n8 == null ? void 0 : n8.textPrimary, "fa-spin", "slow-spin"), description: "Checking the connection...", details: import_react24.default.createElement(u6, null) });
    case "success":
      return import_react24.default.createElement(P2, { className: r8, icon: faCheckCircle, iconClassName: (0, import_classnames18.default)(n8 == null ? void 0 : n8.textSuccess), description: "Connected", details: import_react24.default.createElement("div", { className: (0, import_classnames18.default)(n8 == null ? void 0 : n8.mt3) }, f9) });
    default:
    case "error":
      return import_react24.default.createElement(P2, { className: r8, icon: faTimes, iconClassName: (0, import_classnames18.default)(n8 == null ? void 0 : n8.textDanger), description: "Unable to establish a connection with the device.", details: import_react24.default.createElement(u6, null) });
  }
};
var S5 = u3(U3, {});

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-SZE2S6MQ.js
var import_dist27 = __toESM(require_dist());
v();
u();
function W3(i13) {
  let { provider: t6 } = v2();
  function s3() {
    return Bt(this, null, function* () {
      !t6 || d2("walletconnectv2") && (yield o8());
    });
  }
  function o8() {
    return Bt(this, null, function* () {
      var c16;
      try {
        if (!t6 || !d2("walletconnectv2")) return;
        yield (c16 = t6 == null ? void 0 : t6.sendCustomRequest) == null ? void 0 : c16.call(t6, { request: { method: import_operation.OptionalOperation.CANCEL_ACTION, params: { action: i13 } } });
      } catch (u9) {
        console.warn("WalletConnectV2: Unable to send cancelAction event", u9);
      }
    });
  }
  return { cancelActionV2: o8, cancelWalletConnectAction: s3 };
}

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-SSJJJRCG.js
var import_react25 = __toESM(require_react());
var import_classnames19 = __toESM(require_classnames());
v();
T3();
Q();
var $2 = ({ error: t6, handleClose: m9, transactions: r8, sessionId: N3, className: v5 = "dapp-wallet-connect-modal", modalContentClassName: P4, globalStyles: n8, styles: o8 }) => {
  let x9 = S2(), c16 = { wrapper: (0, import_classnames19.default)(o8 == null ? void 0 : o8.modalContainer, o8 == null ? void 0 : o8.walletConnect, v5), icon: n8 == null ? void 0 : n8.textWhite, closeBtn: (0, import_classnames19.default)(n8 == null ? void 0 : n8.btn, n8 == null ? void 0 : n8.btnCloseLink, n8 == null ? void 0 : n8.btnDark, n8 == null ? void 0 : n8.textWhite, n8 == null ? void 0 : n8.mt2) }, { provider: B7 } = v2(), D5 = z(B7), k4 = r8 && (r8 == null ? void 0 : r8.length) > 1, E3 = D5 === "walletconnectv2", p12 = `Check your phone to sign the transaction${k4 ? "s" : ""}`, { cancelWalletConnectAction: I6 } = W3(B), L6 = () => Bt(void 0, null, function* () {
    x9(N3), yield I6(), m9();
  }), s3 = () => import_react25.default.createElement(import_react25.default.Fragment, null, E3 ? import_react25.default.createElement(S5, { description: p12 }) : p12);
  return import_react25.default.createElement(g2, { onClose: m9, modalConfig: { modalDialogClassName: c16.wrapper }, visible: true }, import_react25.default.createElement(G, { icon: t6 ? faTimes : null, iconClass: c16.icon, className: P4, iconBgClass: t6 ? n8 == null ? void 0 : n8.bgDanger : n8 == null ? void 0 : n8.bgWarning, iconSize: "3x", title: "Confirm on the xPortal App", description: t6 || import_react25.default.createElement(s3, null), action: import_react25.default.createElement("button", { id: "closeButton", "data-testid": "closeButton", onClick: L6, className: c16.closeBtn }, "Cancel") }));
};
var rn = u3($2, { ssrStyles: () => import("./signWithWalletConnectModalStyles-LOZOS7QV.js"), clientStyles: () => (a5(), gt(c12)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-S65OTVRY.js
var import_dist29 = __toESM(require_dist());
var import_react26 = __toESM(require_react());
v();
function p10() {
  return Si(), import_react26.default.createElement(import_react26.default.Fragment, null);
}

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-S7SFE7RV.js
var import_dist30 = __toESM(require_dist());
var import_react27 = __toESM(require_react());
v();
var W4 = (o8) => {
  var r8;
  let a10 = o8.error ? o8.error : ((r8 = o8.transactions) == null ? void 0 : r8.length) > 1 ? "Check your Wallet Window to sign the transactions" : "Check your Wallet Window to sign the transaction", c16 = xt(yt({}, o8), { description: a10, title: "Confirm on your authenticated provider" });
  return import_react27.default.createElement(Y3, yt({}, c16));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-F3L3GHJR.js
var import_dist32 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-NNGPW4C4.js
var import_dist31 = __toESM(require_dist());
var import_react28 = __toESM(require_react());
v();
E();
var u7 = (t6) => {
  let a10 = xt(yt({}, t6), { description: `You need at least MultiversX app version ${T2}. Update MultiversX app to continue`, title: "Signing transactions unavailable" });
  return import_react28.default.createElement(Y3, yt({}, a10));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-F3L3GHJR.js
var import_react29 = __toESM(require_react());
v();
u();
f3();
var w3 = (o8) => {
  var i13;
  let { ledgerAccount: e7, account: { isGuarded: f9 } } = p(), { loginMethod: u9 } = x3(), { ledgerWithGuardians: c16 } = a((i13 = e7 == null ? void 0 : e7.version) != null ? i13 : ""), p12 = u9 === "ledger" ? c16 : true;
  return f9 && !p12 ? import_react29.default.createElement(u7, yt({}, o8)) : import_react29.default.createElement(_4, xt(yt({}, o8), { title: o8.title || "Confirm on Ledger", className: o8.className || "dapp-ledger-modal" }));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-4UBQW45P.js
var import_dist33 = __toESM(require_dist());
var import_react30 = __toESM(require_react());
v();
var m6 = (n8) => {
  var i13;
  let a10 = n8.error ? n8.error : ((i13 = n8.transactions) == null ? void 0 : i13.length) > 1 ? "Check your MultiversX Wallet Extension to sign the transactions" : "Check your MultiversX Wallet Extension to sign the transaction", s3 = xt(yt({}, n8), { description: a10, title: "Confirm on MultiversX DeFi Wallet" });
  return import_react30.default.createElement(Y3, yt({}, s3));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-QREJ2DML.js
var import_dist34 = __toESM(require_dist());
var import_react31 = __toESM(require_react());
v();
S();
var P3 = (o8) => {
  var t6;
  let { walletAddress: l9 } = k2(r), c16 = o8.error ? o8.error : ((t6 = o8.transactions) == null ? void 0 : t6.length) > 1 ? "Check your MultiversX Wallet to sign the transactions" : "Check your MultiversX Wallet to sign the transaction", g7 = xt(yt({}, o8), { description: c16, title: `Confirm on ${l9}` });
  return import_react31.default.createElement(Y3, yt({}, g7));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-VEVTPIU3.js
var import_dist38 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-24C4R3X6.js
var import_dist37 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GWKC3W3Y.js
var import_dist36 = __toESM(require_dist());

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-ASTGED3W.js
var import_dist35 = __toESM(require_dist());
var import_react32 = __toESM(require_react());
var import_classnames20 = __toESM(require_classnames());
v();
var v4 = ({ type: p12, globalStyles: r8, styles: n8 }) => {
  switch (p12) {
    case "info":
      return import_react32.default.createElement("div", { className: (0, import_classnames20.default)(n8 == null ? void 0 : n8.transactionsStatusToastIcon, r8 == null ? void 0 : r8.success) }, import_react32.default.createElement(FontAwesomeIcon, { icon: faInfo, className: n8 == null ? void 0 : n8.svg, size: "5x" }));
    case "warning":
      return import_react32.default.createElement("div", { className: (0, import_classnames20.default)(n8 == null ? void 0 : n8.transactionsStatusToastIcon, r8 == null ? void 0 : r8.warning, n8 == null ? void 0 : n8.warningIcon) }, import_react32.default.createElement(FontAwesomeIcon, { icon: faWarning, className: n8 == null ? void 0 : n8.svg, size: "5x" }));
    case "error":
      return import_react32.default.createElement("div", { className: (0, import_classnames20.default)(n8 == null ? void 0 : n8.transactionsStatusToastIcon, r8 == null ? void 0 : r8.danger, n8 == null ? void 0 : n8.errorIcon) }, import_react32.default.createElement(FontAwesomeIcon, { icon: faTimes, className: n8 == null ? void 0 : n8.svg, size: "5x" }));
    default:
      return null;
  }
};
var C4 = u3(v4, { ssrStyles: () => import("./transactionStatusToastStyles-TDOPT3IT.js"), clientStyles: () => (r3(), gt(e4)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GWKC3W3Y.js
var import_react33 = __toESM(require_react());
v();
var S6 = ({ type: r8, message: a10, styles: t6 }) => import_react33.default.createElement("div", { className: t6 == null ? void 0 : t6.transactionsStatusToastContent }, import_react33.default.createElement(C4, { type: r8 }), a10);
var l7 = u3(S6, { ssrStyles: () => import("./transactionStatusToastStyles-TDOPT3IT.js"), clientStyles: () => (r3(), gt(e4)).default });

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-24C4R3X6.js
var import_react34 = __toESM(require_react());
v();
T3();
S();
var h4 = ({ signError: t6, canceledTransactionsMessage: o8, onDelete: r8 }) => {
  let A6 = k2(i2), S7 = (0, import_react34.useMemo)(() => t6 || o8 || R, [t6, o8]), c16 = (0, import_react34.useMemo)(() => t6 ? "error" : o8 ? "warning" : "info", [t6, o8]);
  return (0, import_react34.useEffect)(() => {
    var n8;
    D2({ toastId: `${o}-${Date.now()}`, title: "Transaction canceled", duration: (n8 = A6.cancelTransactionToastDuration) != null ? n8 : 2e4, component: () => import_react34.default.createElement(l7, { type: c16, message: S7 }), onClose: () => r8 == null ? void 0 : r8(), icon: faWarning });
  }, []), null;
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-VEVTPIU3.js
var import_react35 = __toESM(require_react());
v();
x();
var j = ({ Screen: t6, GuardianScreen: y, verifyReceiverScam: P4, className: C5 }) => {
  var c16;
  if (!t6) return null;
  let { transactionsToSign: o8, error: E3, hasTransactions: S7, onAbort: b3, canceledTransactionsMessage: e7 } = Cn(), h5 = m2(), { providerType: D5 } = v2(), { isGuarded: G4 } = s(), n8 = () => {
    b3(o8 == null ? void 0 : o8.sessionId);
  }, r8 = E3 || h5, k4 = { handleClose: n8, GuardianScreen: y, isGuarded: G4, error: r8, sessionId: o8 == null ? void 0 : o8.sessionId, transactions: (c16 = o8 == null ? void 0 : o8.transactions) != null ? c16 : [], providerType: D5, callbackRoute: (o8 == null ? void 0 : o8.callbackRoute) || D(), className: C5, verifyReceiverScam: P4 }, v5 = { signError: r8, canceledTransactionsMessage: e7, onDelete: n8 }, a10 = Boolean(r8) || Boolean(e7);
  return !a10 && !S7 ? null : a10 ? import_react35.default.createElement(h4, yt({}, v5)) : import_react35.default.createElement(t6, yt({}, k4));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-AN2CA7CL.js
var import_dist39 = __toESM(require_dist());
var import_react36 = __toESM(require_react());
v();
var I5 = ({ Screen: n8, verifyReceiverScam: m9, className: l9 }) => {
  if (!n8) return null;
  let { callbackRoute: S7, transactions: f9, error: g7, sessionId: s3, hasTransactions: y, onAbort: P4, canceledTransactionsMessage: t6 } = Si(), d8 = m2(), { providerType: E3 } = v2(), h5 = () => {
    P4(s3);
  }, o8 = g7 || d8, C5 = { handleClose: h5, error: o8, sessionId: s3, transactions: f9 || [], providerType: E3, callbackRoute: S7, className: l9, verifyReceiverScam: m9 }, x9 = { signError: o8, canceledTransactionsMessage: t6 }, a10 = Boolean(o8) || Boolean(t6);
  return !a10 && !y ? null : a10 ? import_react36.default.createElement(h4, yt({}, x9)) : import_react36.default.createElement(n8, yt({}, C5));
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IGE34NCV.js
var import_react37 = __toESM(require_react());
v();
u();
var m8 = ({ className: i13, CustomConfirmScreens: e7, GuardianScreen: b3, verifyReceiverScam: p12 = true }) => {
  var l9, d8, n8, g7, W5, c16, M4, y, o8;
  let { loginMethod: N3 } = x3(), a10 = { Ledger: (l9 = e7 == null ? void 0 : e7.Ledger) != null ? l9 : w3, WalletConnect: (d8 = e7 == null ? void 0 : e7.WalletConnect) != null ? d8 : rn, Extension: (n8 = e7 == null ? void 0 : e7.Extension) != null ? n8 : m6, Passkey: (g7 = e7 == null ? void 0 : e7.Passkey) != null ? g7 : P, Metamask: (W5 = e7 == null ? void 0 : e7.Metamask) != null ? W5 : d6, Iframe: (c16 = e7 == null ? void 0 : e7.Iframe) != null ? c16 : W4, Opera: (M4 = e7 == null ? void 0 : e7.Opera) != null ? M4 : U2, CrossWindow: (y = e7 == null ? void 0 : e7.CrossWindow) != null ? y : P3, Wallet: () => import_react37.default.createElement(import_react37.default.Fragment, null), Extra: (o8 = e7 == null ? void 0 : e7.Extra) != null ? o8 : p10 }, r8 = (0, import_react37.useCallback)(({ Screen: j2, isDevice: q }) => import_react37.default.createElement(q ? j : I5, { Screen: j2, GuardianScreen: b3, verifyReceiverScam: p12, className: i13 }), [p12, i13]);
  switch (N3) {
    case "ledger":
      return r8({ Screen: a10.Ledger, isDevice: true });
    case "walletconnectv2":
      return r8({ Screen: a10.WalletConnect });
    case "extension":
      return r8({ Screen: a10.Extension });
    case "passkey":
      return r8({ Screen: a10.Passkey, isDevice: true });
    case "metamask":
      return r8({ Screen: a10.Metamask, isDevice: true });
    case "opera":
      return r8({ Screen: a10.Opera });
    case "crossWindow":
      return r8({ Screen: a10.CrossWindow });
    case "iframe":
      return r8({ Screen: a10.Iframe });
    case "wallet":
      return r8({ Screen: a10.Wallet });
    case "extra":
      return r8({ Screen: a10.Extra, isDevice: true });
    default:
      return null;
  }
};

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-AITVYLUK.js
var import_dist41 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-FHEYAH7D.js
var import_dist42 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-5S5FBWKA.js
var import_dist43 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-LFDQD2MC.js
var import_dist44 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-RW42WW6H.js
var import_dist45 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-CNE2BRIR.js
var import_dist46 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-BG2L4ZV2.js
var import_dist47 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IYAZLGAJ.js
var import_dist48 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-C67HIE5H.js
var import_dist49 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-4NUMMQ42.js
var import_dist50 = __toESM(require_dist());
v();
u();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-Y6LTVYIB.js
var import_dist51 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-OIPBX66J.js
var import_dist52 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-UZILE7CY.js
var import_dist53 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-VJRHZASJ.js
var import_dist54 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-IAWLE2HO.js
var import_dist55 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-XWFLUBRK.js
var import_dist56 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-KAQT3PSO.js
var import_dist57 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-MYX27K45.js
var import_dist58 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-3K73EOI3.js
var import_dist59 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-2V5SCMFJ.js
var import_dist60 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-VSUTEZZT.js
var import_dist61 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-SCU3O7KS.js
var import_dist62 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-MCR5TRJV.js
var import_dist63 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-CCFVMHVL.js
var import_dist64 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-C2EQB3JI.js
var import_dist65 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-4MKMJO47.js
var import_dist66 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GQSZQMAI.js
var import_dist67 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-URBAOEFI.js
var import_dist68 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-CLO6KRYZ.js
var import_dist69 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-THTSM336.js
var import_dist70 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-4IWLQ7LG.js
var import_dist71 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GWS36QM2.js
var import_dist72 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GVRTFWYC.js
var import_dist73 = __toESM(require_dist());
v();

// node_modules/@multiversx/sdk-dapp/__chunks__/chunk-PYACTRNA.js
var import_dist74 = __toESM(require_dist());
v();
var N2 = ((r8) => (r8.INFO = "info", r8.ERROR = "error", r8.WARNING = "warning", r8))(N2 || {});
export {
  m8 as SignTransactionsModals
};
//# sourceMappingURL=@multiversx_sdk-dapp_UI_SignTransactionsModals_SignTransactionsModals.js.map
