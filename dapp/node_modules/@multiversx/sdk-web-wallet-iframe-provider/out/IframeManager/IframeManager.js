"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IframeManager = void 0;
const windowProviderConstants_1 = require("@multiversx/sdk-web-wallet-cross-window-provider/out/constants/windowProviderConstants");
const enums_1 = require("@multiversx/sdk-web-wallet-cross-window-provider/out/enums");
const WindowManager_1 = require("@multiversx/sdk-web-wallet-cross-window-provider/out/WindowManager");
const constants_1 = require("../constants");
class IframeManager extends WindowManager_1.WindowManager {
    constructor(props) {
        super();
        this.iframeWalletComponent = null;
        this.iframeId = 'mx-iframe-wallet';
        this.loginType = constants_1.IframeLoginTypes.metamask;
        this.registerToChildResponse = (props) => {
            var _a;
            (_a = constants_1.safeWindow.addEventListener) === null || _a === void 0 ? void 0 : _a.call(constants_1.safeWindow, 'message', (event) => __awaiter(this, void 0, void 0, function* () {
                var _b;
                const { data } = event;
                const type = data.type;
                if (event.origin !== this.walletUrl) {
                    return;
                }
                if (type === enums_1.WindowProviderResponseEnums.disconnectResponse) {
                    yield ((_b = props === null || props === void 0 ? void 0 : props.onDisconnect) === null || _b === void 0 ? void 0 : _b.call(props));
                    sessionStorage.clear();
                    localStorage.clear();
                    window.location.reload();
                    return;
                }
            }));
        };
        this.registerToChildResponse({
            onDisconnect: props === null || props === void 0 ? void 0 : props.onDisconnect
        });
        this.hasHandshake = false;
    }
    get iframeWallet() {
        return this.iframeWalletComponent;
    }
    postMessage({ type, payload }) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            this.hasHandshake = yield this.handshake(type);
            if (!this.hasHandshake) {
                throw new Error('Cannot establish handshake');
            }
            (_a = this.walletWindow) === null || _a === void 0 ? void 0 : _a.postMessage({
                type,
                payload
            }, this.walletUrl);
            return yield this.listenOnce(windowProviderConstants_1.responseTypeMap[type]);
        });
    }
    closeConnection() {
        const _super = Object.create(null, {
            closeConnection: { get: () => super.closeConnection }
        });
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const result = yield _super.closeConnection.call(this);
            (_a = this.iframeWalletComponent) === null || _a === void 0 ? void 0 : _a.remove();
            this.walletWindow = null;
            return result;
        });
    }
    setLoginType(loginType) {
        return __awaiter(this, void 0, void 0, function* () {
            this.loginType = loginType;
        });
    }
    isWalletOpened() {
        return Boolean(this.walletWindow) && this.hasHandshake;
    }
    closeWalletWindow() {
        var _a;
        if (!this.walletWindow) {
            return;
        }
        (_a = this.iframeWallet) === null || _a === void 0 ? void 0 : _a.setWalletVisible(false);
    }
    setWalletWindow() {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            if (this.walletWindow) {
                (_a = this.iframeWallet) === null || _a === void 0 ? void 0 : _a.setWalletVisible(true);
                return;
            }
            const anchor = (_b = constants_1.safeDocument.getElementById) === null || _b === void 0 ? void 0 : _b.call(constants_1.safeDocument, 'root');
            const module = yield Promise.resolve().then(() => __importStar(require('./IframeProviderContentWindow')));
            const IframeProviderContentWindow = module.IframeProviderContentWindow;
            this.iframeWalletComponent = new IframeProviderContentWindow({
                id: this.iframeId,
                anchor,
                url: this.walletUrl,
                loginType: this.loginType
            });
            this.iframeWalletComponent.walletAddress = this.walletUrl;
            const iframe = yield new Promise((resolve) => {
                var _a;
                (_a = this.iframeWalletComponent) === null || _a === void 0 ? void 0 : _a.addEventListener(constants_1.iframeWindowReadyEvent, (event) => {
                    resolve(event.detail);
                });
            });
            if (!iframe) {
                throw new Error('Cannot initialize iframe window');
            }
            this.walletWindow = iframe.contentWindow;
            this.setWalletVisible(true);
        });
    }
    setWalletVisible(visible) {
        var _a;
        (_a = this.iframeWalletComponent) === null || _a === void 0 ? void 0 : _a.setWalletVisible(visible);
    }
}
exports.IframeManager = IframeManager;
//# sourceMappingURL=IframeManager.js.map