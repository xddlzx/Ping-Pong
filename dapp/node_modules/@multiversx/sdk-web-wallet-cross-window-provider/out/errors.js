"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrCouldNotSignMessage = exports.ErrCouldNotGuardTransactions = exports.ErrCouldNotSignTransactions = exports.ErrTransactionCancelled = exports.ErrCouldNotLogin = exports.ErrProviderNotInitialized = exports.ErrProviderNotInstantiated = exports.ErrInstantiationFailed = exports.ErrCannotEstablishHandshake = exports.ErrAccountNotConnected = exports.ErrCannotSignSingleTransaction = exports.Err = void 0;
/**
 * The base class for exceptions (errors).
 */
class Err extends Error {
    constructor(message, inner) {
        super(message);
        this.inner = undefined;
        this.inner = inner;
    }
}
exports.Err = Err;
class ErrCannotSignSingleTransaction extends Err {
    constructor() {
        super('Cannot sign single transaction.');
    }
}
exports.ErrCannotSignSingleTransaction = ErrCannotSignSingleTransaction;
class ErrAccountNotConnected extends Err {
    constructor() {
        super('Account is not connected.');
    }
}
exports.ErrAccountNotConnected = ErrAccountNotConnected;
class ErrCannotEstablishHandshake extends Err {
    constructor() {
        super('Handshake could not be established');
    }
}
exports.ErrCannotEstablishHandshake = ErrCannotEstablishHandshake;
class ErrInstantiationFailed extends Err {
    constructor() {
        super('Error: Instantiation failed: Use Provider.getInstance() instead of new.');
    }
}
exports.ErrInstantiationFailed = ErrInstantiationFailed;
class ErrProviderNotInstantiated extends Err {
    constructor() {
        super('Provider not instantiated');
    }
}
exports.ErrProviderNotInstantiated = ErrProviderNotInstantiated;
class ErrProviderNotInitialized extends Err {
    constructor() {
        super('Provider not initialised, call init() first');
    }
}
exports.ErrProviderNotInitialized = ErrProviderNotInitialized;
class ErrCouldNotLogin extends Err {
    constructor() {
        super('Could not login');
    }
}
exports.ErrCouldNotLogin = ErrCouldNotLogin;
class ErrTransactionCancelled extends Err {
    constructor() {
        super('Transaction canceled.');
    }
}
exports.ErrTransactionCancelled = ErrTransactionCancelled;
class ErrCouldNotSignTransactions extends Err {
    constructor() {
        super('Could not sign transactions');
    }
}
exports.ErrCouldNotSignTransactions = ErrCouldNotSignTransactions;
class ErrCouldNotGuardTransactions extends Err {
    constructor() {
        super('Could not guard transactions');
    }
}
exports.ErrCouldNotGuardTransactions = ErrCouldNotGuardTransactions;
class ErrCouldNotSignMessage extends Err {
    constructor() {
        super('Could not sign message');
    }
}
exports.ErrCouldNotSignMessage = ErrCouldNotSignMessage;
//# sourceMappingURL=errors.js.map