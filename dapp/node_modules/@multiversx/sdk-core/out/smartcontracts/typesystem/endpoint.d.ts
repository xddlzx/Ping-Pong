import { Type } from "./types";
export declare class EndpointDefinition {
    readonly name: string;
    readonly title: string;
    readonly input: EndpointParameterDefinition[];
    readonly output: EndpointParameterDefinition[];
    readonly modifiers: EndpointModifiers;
    constructor(name: string, input: EndpointParameterDefinition[], output: EndpointParameterDefinition[], modifiers: EndpointModifiers, title?: string);
    isConstructor(): boolean;
    static fromJSON(json: {
        name: string;
        title?: string;
        onlyOwner?: boolean;
        mutability: string;
        payableInTokens: string[];
        inputs: any[];
        outputs: any[];
    }): EndpointDefinition;
}
export declare class EndpointModifiers {
    readonly mutability: string;
    readonly payableInTokens: string[];
    readonly onlyOwner: boolean;
    constructor(mutability: string, payableInTokens: string[], onlyOwner?: boolean);
    isPayableInEGLD(): boolean;
    isPayableInToken(token: string): boolean;
    isPayable(): boolean;
    isReadonly(): boolean;
    isOnlyOwner(): boolean;
}
export declare class EndpointParameterDefinition {
    readonly name: string;
    readonly description: string;
    readonly type: Type;
    constructor(name: string, description: string, type: Type);
    static fromJSON(json: {
        name?: string;
        description?: string;
        type: string;
    }): EndpointParameterDefinition;
}
