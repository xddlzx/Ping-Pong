import { IAddress, ITokenTransfer } from "./interface";
import { TransactionPayload } from "./transactionPayload";
/**
 * @deprecated Use {@link TransferTransactionsFactory} instead.
 */
export declare class ESDTTransferPayloadBuilder {
    payment: ITokenTransfer;
    setPayment(payment: ITokenTransfer): ESDTTransferPayloadBuilder;
    build(): TransactionPayload;
}
/**
 * @deprecated Use {@link TransferTransactionsFactory} instead.
 */
export declare class ESDTNFTTransferPayloadBuilder {
    payment: ITokenTransfer;
    destination: IAddress;
    setPayment(payment: ITokenTransfer): ESDTNFTTransferPayloadBuilder;
    setDestination(destination: IAddress): ESDTNFTTransferPayloadBuilder;
    build(): TransactionPayload;
}
/**
 * @deprecated Use {@link TransferTransactionsFactory} instead.
 */
export declare class MultiESDTNFTTransferPayloadBuilder {
    payments: ITokenTransfer[];
    destination: IAddress;
    setPayments(payments: ITokenTransfer[]): MultiESDTNFTTransferPayloadBuilder;
    setDestination(destination: IAddress): MultiESDTNFTTransferPayloadBuilder;
    build(): TransactionPayload;
}
