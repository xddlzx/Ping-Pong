/// <reference types="node" />
import { Address } from "../address";
interface IUserSecretKey {
    sign(message: Buffer | Uint8Array): Buffer;
    generatePublicKey(): IUserPublicKey;
}
interface IUserPublicKey {
    toAddress(hrp?: string): {
        bech32(): string;
    };
}
/**
 * ed25519 signer
 */
export declare class UserSigner {
    protected readonly secretKey: IUserSecretKey;
    constructor(secretKey: IUserSecretKey);
    static fromWallet(keyFileObject: any, password: string, addressIndex?: number): UserSigner;
    static fromPem(text: string, index?: number): UserSigner;
    sign(data: Buffer | Uint8Array): Promise<Buffer>;
    /**
     * Gets the address of the signer.
     */
    getAddress(hrp?: string): Address;
}
export {};
