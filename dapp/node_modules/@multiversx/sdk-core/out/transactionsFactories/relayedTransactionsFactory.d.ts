import { IAddress, ITransaction } from "../interface";
import { Transaction } from "../transaction";
interface IConfig {
    chainID: string;
    minGasLimit: bigint;
    gasLimitPerByte: bigint;
}
/**
 * Use this class to create both RelayedV1 and RelayedV2 transactions.
 */
export declare class RelayedTransactionsFactory {
    private readonly config;
    constructor(options: {
        config: IConfig;
    });
    createRelayedV1Transaction(options: {
        innerTransaction: ITransaction;
        relayerAddress: IAddress;
    }): Transaction;
    createRelayedV2Transaction(options: {
        innerTransaction: ITransaction;
        innerTransactionGasLimit: bigint;
        relayerAddress: IAddress;
    }): Transaction;
    private prepareInnerTransactionForRelayedV1;
}
export {};
