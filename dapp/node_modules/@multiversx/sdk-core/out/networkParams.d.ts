export declare class TransactionVersion {
    /**
     * The actual numeric value.
     */
    private readonly value;
    /**
     * Creates a TransactionVersion object given a value.
     */
    constructor(value: number);
    /**
     * Creates a TransactionVersion object with the default version setting
     */
    static withDefaultVersion(): TransactionVersion;
    /**
     * Creates a TransactionVersion object with the VERSION setting for enabling options
     */
    static withTxOptions(): TransactionVersion;
    valueOf(): number;
}
export declare class TransactionOptions {
    /**
     * The actual numeric value.
     */
    private value;
    /**
     * Creates a TransactionOptions from a numeric value.
     */
    constructor(value: number);
    /**
     * Creates a TransactionOptions object with the default options.
     */
    static withDefaultOptions(): TransactionOptions;
    /**
     * Creates a TransactionOptions object from a set of options.
     */
    static withOptions(options: {
        hashSign?: boolean;
        guarded?: boolean;
    }): TransactionOptions;
    /**
     * Returns true if the "hash sign" option is set.
     */
    isWithHashSign(): boolean;
    /**
     * Returns true if the "guarded transaction" option is set.
     */
    isWithGuardian(): boolean;
    /**
     * Sets the "hash sign" option.
     */
    setWithHashSign(): void;
    /**
     * Sets the "guarded transaction" option.
     */
    setWithGuardian(): void;
    valueOf(): number;
}
