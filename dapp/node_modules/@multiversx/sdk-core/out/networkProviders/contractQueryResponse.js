"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractQueryResponse = void 0;
const bignumber_js_1 = __importDefault(require("bignumber.js"));
const constants_1 = require("./constants");
class ContractQueryResponse {
    constructor(init) {
        this.returnData = init?.returnData || [];
        this.returnCode = init?.returnCode || "";
        this.returnMessage = init?.returnMessage || "";
        this.gasUsed = init?.gasUsed || 0;
    }
    /**
     * Constructs a QueryResponse object from a HTTP response (as returned by the provider).
     */
    static fromHttpResponse(payload) {
        let returnData = payload["returnData"] || payload["ReturnData"];
        let returnCode = payload["returnCode"] || payload["ReturnCode"];
        let returnMessage = payload["returnMessage"] || payload["ReturnMessage"];
        let gasRemaining = new bignumber_js_1.default(payload["gasRemaining"] || payload["GasRemaining"] || 0);
        let gasUsed = constants_1.MaxUint64AsBigNumber.minus(gasRemaining).toNumber();
        return new ContractQueryResponse({
            returnData: returnData,
            returnCode: returnCode,
            returnMessage: returnMessage,
            gasUsed: gasUsed,
        });
    }
    getReturnDataParts() {
        return this.returnData.map((item) => Buffer.from(item || "", "base64"));
    }
    /**
     * Converts the object to a pretty, plain JavaScript object.
     */
    toJSON() {
        return {
            returnData: this.returnData,
            returnCode: this.returnCode,
            returnMessage: this.returnMessage,
            gasUsed: this.gasUsed.valueOf(),
        };
    }
}
exports.ContractQueryResponse = ContractQueryResponse;
//# sourceMappingURL=contractQueryResponse.js.map