"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkConfig = void 0;
const bignumber_js_1 = __importDefault(require("bignumber.js"));
/**
 * An object holding Network configuration parameters.
 */
class NetworkConfig {
    constructor() {
        this.ChainID = "T";
        this.GasPerDataByte = 1500;
        this.TopUpFactor = 0;
        this.RoundDuration = 0;
        this.RoundsPerEpoch = 0;
        this.TopUpRewardsGradientPoint = new bignumber_js_1.default(0);
        this.MinGasLimit = 50000;
        this.MinGasPrice = 1000000000;
        this.GasPriceModifier = 1;
        this.MinTransactionVersion = 1;
    }
    /**
     * Constructs a configuration object from a HTTP response (as returned by the provider).
     */
    static fromHttpResponse(payload) {
        let networkConfig = new NetworkConfig();
        networkConfig.ChainID = String(payload["erd_chain_id"]);
        networkConfig.GasPerDataByte = Number(payload["erd_gas_per_data_byte"]);
        networkConfig.TopUpFactor = Number(payload["erd_top_up_factor"]);
        networkConfig.RoundDuration = Number(payload["erd_round_duration"]);
        networkConfig.RoundsPerEpoch = Number(payload["erd_rounds_per_epoch"]);
        networkConfig.TopUpRewardsGradientPoint = new bignumber_js_1.default(payload["erd_rewards_top_up_gradient_point"]);
        networkConfig.MinGasLimit = Number(payload["erd_min_gas_limit"]);
        networkConfig.MinGasPrice = Number(payload["erd_min_gas_price"]);
        networkConfig.MinTransactionVersion = Number(payload["erd_min_transaction_version"]);
        networkConfig.GasPriceModifier = Number(payload["erd_gas_price_modifier"]);
        return networkConfig;
    }
}
exports.NetworkConfig = NetworkConfig;
//# sourceMappingURL=networkConfig.js.map