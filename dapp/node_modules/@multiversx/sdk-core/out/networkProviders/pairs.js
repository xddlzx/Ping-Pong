"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PairOnNetwork = void 0;
const bignumber_js_1 = __importDefault(require("bignumber.js"));
const address_1 = require("../address");
class PairOnNetwork {
    constructor(init) {
        this.address = address_1.Address.empty();
        this.id = "";
        this.symbol = "";
        this.name = "";
        this.price = new bignumber_js_1.default(0);
        this.baseId = "";
        this.basePrice = new bignumber_js_1.default(0);
        this.baseSymbol = "";
        this.baseName = "";
        this.quoteId = "";
        this.quotePrice = new bignumber_js_1.default(0);
        this.quoteSymbol = "";
        this.quoteName = "";
        this.totalValue = new bignumber_js_1.default(0);
        this.volume24h = new bignumber_js_1.default(0);
        this.state = "";
        this.type = "";
        this.rawResponse = {};
        Object.assign(this, init);
    }
    static fromApiHttpResponse(payload) {
        let result = new PairOnNetwork();
        result.address = new address_1.Address(payload.address || "");
        result.id = payload.id || "";
        result.symbol = payload.symbol || "";
        result.name = payload.name || "";
        result.price = new bignumber_js_1.default(payload.price || 0);
        result.baseId = payload.baseId || "";
        result.basePrice = new bignumber_js_1.default(payload.basePrice || 0);
        result.baseSymbol = payload.baseSymbol || "";
        result.baseName = payload.baseName || "";
        result.quoteId = payload.quoteId || "";
        result.quotePrice = new bignumber_js_1.default(payload.quotePrice || 0);
        result.quoteSymbol = payload.quoteSymbol || "";
        result.quoteName = payload.quoteName || "";
        result.totalValue = new bignumber_js_1.default(payload.totalValue || 0);
        result.volume24h = new bignumber_js_1.default(payload.volume24h || 0);
        result.state = payload.state || "";
        result.type = payload.type || "";
        result.rawResponse = payload;
        return result;
    }
}
exports.PairOnNetwork = PairOnNetwork;
//# sourceMappingURL=pairs.js.map