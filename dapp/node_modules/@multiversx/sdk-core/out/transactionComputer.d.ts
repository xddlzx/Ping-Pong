import { ITransaction } from "./interface";
import { INetworkConfig } from "./interfaceOfNetwork";
/**
 * An utilitary class meant to work together with the {@link Transaction} class.
 */
export declare class TransactionComputer {
    constructor();
    computeTransactionFee(transaction: {
        gasPrice: bigint;
        gasLimit: bigint;
        data: Uint8Array;
    }, networkConfig: INetworkConfig): bigint;
    computeBytesForSigning(transaction: ITransaction): Uint8Array;
    computeBytesForVerifying(transaction: ITransaction): Uint8Array;
    computeHashForSigning(transaction: ITransaction): Uint8Array;
    computeTransactionHash(transaction: ITransaction): Uint8Array;
    hasOptionsSetForGuardedTransaction(transaction: ITransaction): boolean;
    hasOptionsSetForHashSigning(transaction: ITransaction): boolean;
    applyGuardian(transaction: ITransaction, guardian: string): void;
    isRelayedV3Transaction(transaction: ITransaction): boolean;
    applyOptionsForHashSigning(transaction: ITransaction): void;
    private toPlainObject;
    private toHexOrUndefined;
    private toBase64OrUndefined;
    private ensureValidTransactionFields;
}
