/// <reference types="node" />
import { Address } from "./address";
import { ISignature } from "./interface";
/**
 * @deprecated Use {@link Message} instead.
 */
export declare class SignableMessage {
    /**
     * Actual message being signed.
     */
    message: Buffer;
    /**
     * Signature obtained by a signer of type @param signer .
     */
    signature: Buffer;
    /**
     * Address of the wallet that performed the signing operation
     */
    address: Address;
    /**
     * Text representing the identifer for the application that signed the message
     */
    signer: string;
    /**
     * Number representing the signable message version
     */
    version: number;
    constructor(init?: Partial<SignableMessage>);
    serializeForSigning(): Buffer;
    serializeForSigningRaw(): Buffer;
    getSignature(): Buffer;
    applySignature(signature: ISignature | Uint8Array): void;
    getMessageSize(): Buffer;
    toJSON(): object;
}
