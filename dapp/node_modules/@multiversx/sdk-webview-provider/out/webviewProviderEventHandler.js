"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.webviewProviderEventHandler = void 0;
const getTargetOrigin_1 = require("./helpers/getTargetOrigin");
const isMobileWebview_1 = require("./helpers/isMobileWebview");
const getSafeWindow_1 = require("./helpers/getSafeWindow");
const getSafeDocument_1 = require("./helpers/getSafeDocument");
const windowProviderEnums_1 = require("@multiversx/sdk-web-wallet-cross-window-provider/out/enums/windowProviderEnums");
const webviewProviderEventHandler = (action, resolve) => {
    return (event) => {
        var _a, _b, _c, _d;
        let eventData = event.data;
        try {
            eventData =
                (0, isMobileWebview_1.isMobileWebview)() && typeof eventData === 'string'
                    ? JSON.parse(eventData)
                    : eventData;
        }
        catch (err) {
            console.error('error parsing eventData', eventData);
        }
        const { type, payload } = eventData;
        if (!(0, isMobileWebview_1.isMobileWebview)() && event.origin != (0, getTargetOrigin_1.getTargetOrigin)()) {
            return;
        }
        const isCurrentAction = action === type || type === windowProviderEnums_1.WindowProviderResponseEnums.cancelResponse;
        if (!isCurrentAction) {
            return;
        }
        (_b = (_a = (0, getSafeWindow_1.getSafeWindow)()).removeEventListener) === null || _b === void 0 ? void 0 : _b.call(_a, 'message', (0, exports.webviewProviderEventHandler)(action, resolve));
        (_d = (_c = (0, getSafeDocument_1.getSafeDocument)()).removeEventListener) === null || _d === void 0 ? void 0 : _d.call(_c, 'message', (0, exports.webviewProviderEventHandler)(action, resolve));
        resolve({ type, payload });
    };
};
exports.webviewProviderEventHandler = webviewProviderEventHandler;
//# sourceMappingURL=webviewProviderEventHandler.js.map