import { Message } from "@multiversx/sdk-core";
import { Transaction } from "@multiversx/sdk-core/out/transaction";
declare global {
    interface Window {
        elrondWallet: {
            extensionId: string;
        };
    }
}
export interface IProviderAccount {
    address: string;
    signature?: string;
}
export declare class ExtensionProvider {
    private account;
    private initialized;
    private static _instance;
    private constructor();
    static getInstance(): ExtensionProvider;
    setAddress(address: string): ExtensionProvider;
    init(): Promise<boolean>;
    login(options?: {
        callbackUrl?: string;
        token?: string;
    }): Promise<IProviderAccount>;
    logout(): Promise<boolean>;
    private disconnect;
    getAddress(): Promise<string>;
    isInitialized(): boolean;
    isConnected(): boolean;
    getAccount(): IProviderAccount | null;
    setAccount(account: IProviderAccount): void;
    signTransaction(transaction: Transaction): Promise<Transaction>;
    private ensureConnected;
    signTransactions(transactions: Transaction[]): Promise<Transaction[]>;
    signMessage(messageToSign: Message): Promise<Message>;
    cancelAction(): Promise<any>;
    private startBgrMsgChannel;
}
